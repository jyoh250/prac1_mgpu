
gemm.hsaco:	file format elf64-amdgpu


Disassembly of section .text:

0000000000004000 <gemm$local>:
	v_cndmask_b32_e32 v0, s1, v0, vcc                          // 000000004000: 00000001
	v_cndmask_b32_e32 v0, s2, v0, vcc                          // 000000004004: 00000002
	v_cndmask_b32_e32 v4, s1, v0, vcc                          // 000000004008: 00080001
	v_cndmask_b32_e32 v1, s0, v128, vcc                        // 00000000400C: 00030000
	v_cndmask_b32_e32 v0, v0, v0, vcc                          // 000000004010: 00000100
		...
	v_cndmask_b32_e32 v86, -4, v0, vcc                         // 000000004030: 00AC00C4
	v_cndmask_b32_e32 v0, v144, v4, vcc                        // 000000004034: 00000990
	v_cndmask_b32_e32 v5, s11, v0, vcc                         // 000000004038: 000A000B
	v_cndmask_b32_e32 v0, s0, v0, vcc                          // 00000000403C: 00000000
	v_cndmask_b32_e32 v0, s0, v4, vcc                          // 000000004040: 00000800
	v_cndmask_b32_e32 v0, s0, v0, vcc                          // 000000004044: 00000000
	v_cndmask_b32_e32 v0, ttmp0, v0, vcc                       // 000000004048: 00000070
		...
	v_cndmask_b32_e32 v9, s28, v128, vcc                       // 000000004054: 0013001C
		...
	v_subrev_f32_e32 v2, s4, v2                                // 000000004064: 06040404
	.long 0xffffffff                                           // 000000004068: FFFFFFFF
		...
	s_load_dwordx2 s[0:1], s[6:7], 0x38                        // 000000004100: C0060003 00000038
	s_load_dword s2, s[4:5], 0x4                               // 000000004108: C0020082 00000004
	v_mov_b32_e32 v3, 0                                        // 000000004110: 7E060280
	s_waitcnt lgkmcnt(0)                                       // 000000004114: BF8C007F
	v_mov_b32_e32 v5, s1                                       // 000000004118: 7E0A0201
	s_and_b32 s10, s2, 0xffff                                  // 00000000411C: 860AFF02 0000FFFF
	s_mul_i32 s8, s8, s10                                      // 000000004124: 92080A08
	v_add_u32_e32 v2, vcc, s8, v0                              // 000000004128: 32040008
	v_add_u32_e32 v4, vcc, s0, v2                              // 00000000412C: 32080400
	v_addc_u32_e32 v6, vcc, v5, v3, vcc                        // 000000004130: 380C0705
	v_mov_b32_e32 v5, 0                                        // 000000004134: 7E0A0280
	s_add_u32 s2, s6, 56                                       // 000000004138: 8002B806
	v_cmp_ne_u64_e32 vcc, 0, v[5:6]                            // 00000000413C: 7DDA0A80
	s_addc_u32 s3, s7, 0                                       // 000000004140: 82038007
	s_and_saveexec_b64 s[0:1], vcc                             // 000000004144: BE80206A
	s_xor_b64 s[12:13], exec, s[0:1]                           // 000000004148: 888C007E
	s_cbranch_execz BB0_2                                      // 00000000414C: BF880089
	v_cvt_f32_u32_e32 v2, s10                                  // 000000004150: 7E040C0A
	v_mov_b32_e32 v3, 0x4f800000                               // 000000004154: 7E0602FF 4F800000
	s_sub_u32 s8, 0, s10                                       // 00000000415C: 80880A80
	s_subb_u32 s11, 0, 0                                       // 000000004160: 828B8080
	v_mac_f32_e32 v2, 0, v3                                    // 000000004164: 2C040680
	v_rcp_f32_e32 v2, v2                                       // 000000004168: 7E044502
	v_mov_b32_e32 v11, 0                                       // 00000000416C: 7E160280
	v_mov_b32_e32 v5, 0                                        // 000000004170: 7E0A0280
	v_mul_f32_e32 v2, 0x5f7ffffc, v2                           // 000000004174: 0A0404FF 5F7FFFFC
	v_mul_f32_e32 v3, 0x2f800000, v2                           // 00000000417C: 0A0604FF 2F800000
	v_trunc_f32_e32 v3, v3                                     // 000000004184: 7E063903
	v_mac_f32_e32 v2, 0xcf800000, v3                           // 000000004188: 2C0406FF CF800000
	v_cvt_u32_f32_e32 v2, v2                                   // 000000004190: 7E040F02
	v_cvt_u32_f32_e32 v3, v3                                   // 000000004194: 7E060F03
	v_mul_hi_u32 v8, s8, v2                                    // 000000004198: D2860008 00020408
	v_mul_lo_u32 v7, s8, v3                                    // 0000000041A0: D2850007 00020608
	v_mul_lo_u32 v10, s11, v2                                  // 0000000041A8: D285000A 0002040B
	v_mul_lo_u32 v9, s8, v2                                    // 0000000041B0: D2850009 00020408
	v_add_u32_e32 v7, vcc, v8, v7                              // 0000000041B8: 320E0F08
	v_add_u32_e32 v7, vcc, v7, v10                             // 0000000041BC: 320E1507
	v_mul_hi_u32 v8, v2, v9                                    // 0000000041C0: D2860008 00021302
	v_mul_lo_u32 v10, v2, v7                                   // 0000000041C8: D285000A 00020F02
	v_mul_hi_u32 v12, v2, v7                                   // 0000000041D0: D286000C 00020F02
	v_mul_hi_u32 v13, v3, v7                                   // 0000000041D8: D286000D 00020F03
	v_mul_lo_u32 v7, v3, v7                                    // 0000000041E0: D2850007 00020F03
	v_add_u32_e32 v8, vcc, v8, v10                             // 0000000041E8: 32101508
	v_addc_u32_e32 v10, vcc, v11, v12, vcc                     // 0000000041EC: 3814190B
	v_mul_lo_u32 v12, v3, v9                                   // 0000000041F0: D285000C 00021303
	v_mul_hi_u32 v9, v3, v9                                    // 0000000041F8: D2860009 00021303
	v_add_u32_e32 v8, vcc, v12, v8                             // 000000004200: 3210110C
	v_addc_u32_e32 v8, vcc, v10, v9, vcc                       // 000000004204: 3810130A
	v_addc_u32_e32 v9, vcc, v13, v5, vcc                       // 000000004208: 38120B0D
	v_add_u32_e32 v7, vcc, v8, v7                              // 00000000420C: 320E0F08
	v_add_u32_e64 v2, s[0:1], v2, v7                           // 000000004210: D1190002 00020F02
	v_addc_u32_e32 v8, vcc, v11, v9, vcc                       // 000000004218: 3810130B
	v_addc_u32_e64 v7, vcc, v3, v8, s[0:1]                     // 00000000421C: D11C6A07 00021103
	v_mul_lo_u32 v9, s8, v7                                    // 000000004224: D2850009 00020E08
	v_mul_hi_u32 v10, s8, v2                                   // 00000000422C: D286000A 00020408
	v_mul_lo_u32 v12, s11, v2                                  // 000000004234: D285000C 0002040B
	v_add_u32_e32 v9, vcc, v10, v9                             // 00000000423C: 3212130A
	v_mul_lo_u32 v10, s8, v2                                   // 000000004240: D285000A 00020408
	v_add_u32_e32 v9, vcc, v12, v9                             // 000000004248: 3212130C
	v_mul_lo_u32 v14, v2, v9                                   // 00000000424C: D285000E 00021302
	v_mul_hi_u32 v16, v2, v9                                   // 000000004254: D2860010 00021302
	v_mul_hi_u32 v15, v2, v10                                  // 00000000425C: D286000F 00021502
	v_mul_hi_u32 v13, v7, v10                                  // 000000004264: D286000D 00021507
	v_mul_lo_u32 v10, v7, v10                                  // 00000000426C: D285000A 00021507
	v_mul_hi_u32 v12, v7, v9                                   // 000000004274: D286000C 00021307
	v_add_u32_e32 v14, vcc, v15, v14                           // 00000000427C: 321C1D0F
	v_addc_u32_e32 v15, vcc, v11, v16, vcc                     // 000000004280: 381E210B
	v_mul_lo_u32 v7, v7, v9                                    // 000000004284: D2850007 00021307
	v_add_u32_e32 v10, vcc, v14, v10                           // 00000000428C: 3214150E
	v_addc_u32_e32 v10, vcc, v15, v13, vcc                     // 000000004290: 38141B0F
	v_addc_u32_e32 v9, vcc, v12, v5, vcc                       // 000000004294: 38120B0C
	v_add_u32_e32 v7, vcc, v10, v7                             // 000000004298: 320E0F0A
	v_addc_u32_e32 v9, vcc, v11, v9, vcc                       // 00000000429C: 3812130B
	v_add_u32_e32 v3, vcc, v3, v8                              // 0000000042A0: 32061103
	v_addc_u32_e64 v3, vcc, v3, v9, s[0:1]                     // 0000000042A4: D11C6A03 00021303
	v_add_u32_e32 v2, vcc, v2, v7                              // 0000000042AC: 32040F02
	v_addc_u32_e32 v3, vcc, 0, v3, vcc                         // 0000000042B0: 38060680
	v_mul_lo_u32 v7, v4, v3                                    // 0000000042B4: D2850007 00020704
	v_mul_hi_u32 v8, v4, v2                                    // 0000000042BC: D2860008 00020504
	v_mul_hi_u32 v9, v4, v3                                    // 0000000042C4: D2860009 00020704
	v_mul_hi_u32 v10, v6, v3                                   // 0000000042CC: D286000A 00020706
	v_mul_lo_u32 v3, v6, v3                                    // 0000000042D4: D2850003 00020706
	v_add_u32_e32 v7, vcc, v8, v7                              // 0000000042DC: 320E0F08
	v_addc_u32_e32 v8, vcc, v11, v9, vcc                       // 0000000042E0: 3810130B
	v_mul_lo_u32 v9, v6, v2                                    // 0000000042E4: D2850009 00020506
	v_mul_hi_u32 v2, v6, v2                                    // 0000000042EC: D2860002 00020506
	v_add_u32_e32 v7, vcc, v7, v9                              // 0000000042F4: 320E1307
	v_addc_u32_e32 v2, vcc, v8, v2, vcc                        // 0000000042F8: 38040508
	v_addc_u32_e32 v5, vcc, v10, v5, vcc                       // 0000000042FC: 380A0B0A
	v_add_u32_e32 v2, vcc, v2, v3                              // 000000004300: 32040702
	v_addc_u32_e32 v3, vcc, v11, v5, vcc                       // 000000004304: 38060B0B
	v_mul_lo_u32 v3, s10, v3                                   // 000000004308: D2850003 0002060A
	v_mul_hi_u32 v5, s10, v2                                   // 000000004310: D2860005 0002040A
	v_mul_lo_u32 v7, s10, v2                                   // 000000004318: D2850007 0002040A
	v_add_u32_e32 v3, vcc, v5, v3                              // 000000004320: 32060705
	v_sub_u32_e32 v5, vcc, v4, v7                              // 000000004324: 340A0F04
	v_subb_u32_e32 v3, vcc, v6, v3, vcc                        // 000000004328: 3A060706
	v_subrev_u32_e32 v6, vcc, s10, v5                          // 00000000432C: 360C0A0A
	v_subbrev_u32_e32 v7, vcc, 0, v3, vcc                      // 000000004330: 3C0E0680
	v_cmp_le_u32_e32 vcc, s10, v6                              // 000000004334: 7D960C0A
	v_cndmask_b32_e64 v6, 0, -1, vcc                           // 000000004338: D1000006 01A98280
	v_cmp_eq_u32_e32 vcc, 0, v7                                // 000000004340: 7D940E80
	v_cndmask_b32_e32 v6, -1, v6, vcc                          // 000000004344: 000C0CC1
	v_add_u32_e32 v7, vcc, 2, v2                               // 000000004348: 320E0482
	v_add_u32_e32 v8, vcc, 1, v2                               // 00000000434C: 32100481
	v_cmp_le_u32_e32 vcc, s10, v5                              // 000000004350: 7D960A0A
	v_cndmask_b32_e64 v5, 0, -1, vcc                           // 000000004354: D1000005 01A98280
	v_cmp_eq_u32_e32 vcc, 0, v3                                // 00000000435C: 7D940680
	v_cndmask_b32_e32 v3, -1, v5, vcc                          // 000000004360: 00060AC1
	v_cmp_ne_u32_e32 vcc, 0, v6                                // 000000004364: 7D9A0C80
	v_cndmask_b32_e32 v5, v8, v7, vcc                          // 000000004368: 000A0F08
	v_cmp_ne_u32_e32 vcc, 0, v3                                // 00000000436C: 7D9A0680
	v_cndmask_b32_e32 v2, v2, v5, vcc                          // 000000004370: 00040B02

0000000000004374 <BB0_2>:
	s_or_saveexec_b64 s[0:1], s[12:13]                         // 000000004374: BE80210C
	s_load_dwordx4 s[12:15], s[6:7], 0x0                       // 000000004378: C00A0303 00000000
	s_xor_b64 exec, exec, s[0:1]                               // 000000004380: 88FE007E
	s_cbranch_execz BB0_4                                      // 000000004384: BF880018
	v_cvt_f32_u32_e32 v2, s10                                  // 000000004388: 7E040C0A
	s_sub_i32 s8, 0, s10                                       // 00000000438C: 81880A80
	v_rcp_iflag_f32_e32 v2, v2                                 // 000000004390: 7E044702
	v_mul_f32_e32 v2, 0x4f7ffffe, v2                           // 000000004394: 0A0404FF 4F7FFFFE
	v_cvt_u32_f32_e32 v2, v2                                   // 00000000439C: 7E040F02
	v_mul_lo_u32 v3, s8, v2                                    // 0000000043A0: D2850003 00020408
	v_mul_hi_u32 v3, v2, v3                                    // 0000000043A8: D2860003 00020702
	v_add_u32_e32 v2, vcc, v3, v2                              // 0000000043B0: 32040503
	v_mul_hi_u32 v2, v4, v2                                    // 0000000043B4: D2860002 00020504
	v_mul_lo_u32 v3, v2, s10                                   // 0000000043BC: D2850003 00001502
	v_add_u32_e32 v5, vcc, 1, v2                               // 0000000043C4: 320A0481
	v_sub_u32_e32 v3, vcc, v4, v3                              // 0000000043C8: 34060704
	v_subrev_u32_e32 v4, vcc, s10, v3                          // 0000000043CC: 3608060A
	v_cmp_le_u32_e32 vcc, s10, v3                              // 0000000043D0: 7D96060A
	v_cndmask_b32_e32 v2, v2, v5, vcc                          // 0000000043D4: 00040B02
	v_cndmask_b32_e32 v3, v3, v4, vcc                          // 0000000043D8: 00060903
	v_add_u32_e32 v4, vcc, 1, v2                               // 0000000043DC: 32080481
	v_cmp_le_u32_e32 vcc, s10, v3                              // 0000000043E0: 7D96060A
	v_cndmask_b32_e32 v2, v2, v4, vcc                          // 0000000043E4: 00040902

00000000000043e8 <BB0_4>:
	s_or_b64 exec, exec, s[0:1]                                // 0000000043E8: 87FE007E
	s_add_u32 s0, s4, 6                                        // 0000000043EC: 80008604
	s_addc_u32 s1, s5, 0                                       // 0000000043F0: 82018005
	v_mov_b32_e32 v4, s1                                       // 0000000043F4: 7E080201
	v_mov_b32_e32 v3, s0                                       // 0000000043F8: 7E060200
	flat_load_ushort v3, v[3:4]                                // 0000000043FC: DC480000 03000003
	s_load_dwordx2 s[0:1], s[2:3], 0x8                         // 000000004404: C0060001 00000008
	s_load_dword s4, s[6:7], 0x10                              // 00000000440C: C0020103 00000010
	v_mov_b32_e32 v6, 0                                        // 000000004414: 7E0C0280
	v_mov_b32_e32 v5, 0                                        // 000000004418: 7E0A0280
	s_waitcnt lgkmcnt(0)                                       // 00000000441C: BF8C007F
	v_mov_b32_e32 v7, s1                                       // 000000004420: 7E0E0201
	s_waitcnt vmcnt(0)                                         // 000000004424: BF8C0F70
	v_and_b32_e32 v3, 0xffff, v3                               // 000000004428: 260606FF 0000FFFF
	v_mul_lo_u32 v4, s9, v3                                    // 000000004430: D2850004 00020609
	v_add_u32_e32 v4, vcc, v4, v1                              // 000000004438: 32080304
	v_add_u32_e32 v4, vcc, s0, v4                              // 00000000443C: 32080800
	v_addc_u32_e32 v6, vcc, v7, v6, vcc                        // 000000004440: 380C0D07
	v_cmp_ne_u64_e32 vcc, 0, v[5:6]                            // 000000004444: 7DDA0A80
	s_and_saveexec_b64 s[0:1], vcc                             // 000000004448: BE80206A
	s_xor_b64 s[2:3], exec, s[0:1]                             // 00000000444C: 8882007E
	s_cbranch_execz BB0_6                                      // 000000004450: BF880089
	v_cvt_f32_u32_e32 v5, v3                                   // 000000004454: 7E0A0D03
	v_mov_b32_e32 v7, 0x4f800000                               // 000000004458: 7E0E02FF 4F800000
	v_sub_u32_e32 v9, vcc, 0, v3                               // 000000004460: 34120680
	v_mov_b32_e32 v16, 0                                       // 000000004464: 7E200280
	v_mac_f32_e32 v5, 0, v7                                    // 000000004468: 2C0A0E80
	v_rcp_f32_e32 v5, v5                                       // 00000000446C: 7E0A4505
	v_mov_b32_e32 v7, 0                                        // 000000004470: 7E0E0280
	v_subb_u32_e32 v10, vcc, 0, v7, vcc                        // 000000004474: 3A140E80
	v_mul_f32_e32 v5, 0x5f7ffffc, v5                           // 000000004478: 0A0A0AFF 5F7FFFFC
	v_mul_f32_e32 v8, 0x2f800000, v5                           // 000000004480: 0A100AFF 2F800000
	v_trunc_f32_e32 v8, v8                                     // 000000004488: 7E103908
	v_mac_f32_e32 v5, 0xcf800000, v8                           // 00000000448C: 2C0A10FF CF800000
	v_cvt_u32_f32_e32 v5, v5                                   // 000000004494: 7E0A0F05
	v_cvt_u32_f32_e32 v8, v8                                   // 000000004498: 7E100F08
	v_mul_hi_u32 v12, v9, v5                                   // 00000000449C: D286000C 00020B09
	v_mul_lo_u32 v11, v9, v8                                   // 0000000044A4: D285000B 00021109
	v_mul_lo_u32 v13, v10, v5                                  // 0000000044AC: D285000D 00020B0A
	v_mul_lo_u32 v14, v9, v5                                   // 0000000044B4: D285000E 00020B09
	v_add_u32_e32 v11, vcc, v12, v11                           // 0000000044BC: 3216170C
	v_add_u32_e32 v11, vcc, v13, v11                           // 0000000044C0: 3216170D
	v_mul_lo_u32 v12, v5, v11                                  // 0000000044C4: D285000C 00021705
	v_mul_hi_u32 v13, v5, v14                                  // 0000000044CC: D286000D 00021D05
	v_mul_hi_u32 v15, v5, v11                                  // 0000000044D4: D286000F 00021705
	v_mul_hi_u32 v17, v8, v11                                  // 0000000044DC: D2860011 00021708
	v_mul_lo_u32 v11, v8, v11                                  // 0000000044E4: D285000B 00021708
	v_add_u32_e32 v12, vcc, v13, v12                           // 0000000044EC: 3218190D
	v_addc_u32_e32 v13, vcc, v7, v15, vcc                      // 0000000044F0: 381A1F07
	v_mul_lo_u32 v15, v8, v14                                  // 0000000044F4: D285000F 00021D08
	v_mul_hi_u32 v14, v8, v14                                  // 0000000044FC: D286000E 00021D08
	v_add_u32_e32 v12, vcc, v12, v15                           // 000000004504: 32181F0C
	v_addc_u32_e32 v12, vcc, v13, v14, vcc                     // 000000004508: 38181D0D
	v_addc_u32_e32 v13, vcc, v17, v16, vcc                     // 00000000450C: 381A2111
	v_add_u32_e32 v11, vcc, v12, v11                           // 000000004510: 3216170C
	v_add_u32_e64 v5, s[0:1], v5, v11                          // 000000004514: D1190005 00021705
	v_addc_u32_e32 v12, vcc, v7, v13, vcc                      // 00000000451C: 38181B07
	v_addc_u32_e64 v11, vcc, v8, v12, s[0:1]                   // 000000004520: D11C6A0B 00021908
	v_mul_lo_u32 v13, v9, v11                                  // 000000004528: D285000D 00021709
	v_mul_hi_u32 v14, v9, v5                                   // 000000004530: D286000E 00020B09
	v_mul_lo_u32 v10, v10, v5                                  // 000000004538: D285000A 00020B0A
	v_mul_lo_u32 v9, v9, v5                                    // 000000004540: D2850009 00020B09
	v_add_u32_e32 v13, vcc, v14, v13                           // 000000004548: 321A1B0E
	v_add_u32_e32 v10, vcc, v10, v13                           // 00000000454C: 32141B0A
	v_mul_lo_u32 v15, v5, v10                                  // 000000004550: D285000F 00021505
	v_mul_hi_u32 v17, v5, v9                                   // 000000004558: D2860011 00021305
	v_mul_hi_u32 v18, v5, v10                                  // 000000004560: D2860012 00021505
	v_mul_hi_u32 v14, v11, v9                                  // 000000004568: D286000E 0002130B
	v_mul_lo_u32 v9, v11, v9                                   // 000000004570: D2850009 0002130B
	v_add_u32_e32 v15, vcc, v17, v15                           // 000000004578: 321E1F11
	v_mul_hi_u32 v13, v11, v10                                 // 00000000457C: D286000D 0002150B
	v_addc_u32_e32 v17, vcc, v7, v18, vcc                      // 000000004584: 38222507
	v_mul_lo_u32 v10, v11, v10                                 // 000000004588: D285000A 0002150B
	v_add_u32_e32 v9, vcc, v15, v9                             // 000000004590: 3212130F
	v_addc_u32_e32 v9, vcc, v17, v14, vcc                      // 000000004594: 38121D11
	v_addc_u32_e32 v11, vcc, v13, v16, vcc                     // 000000004598: 3816210D
	v_add_u32_e32 v9, vcc, v9, v10                             // 00000000459C: 32121509
	v_addc_u32_e32 v10, vcc, v7, v11, vcc                      // 0000000045A0: 38141707
	v_add_u32_e32 v8, vcc, v8, v12                             // 0000000045A4: 32101908
	v_addc_u32_e64 v8, vcc, v8, v10, s[0:1]                    // 0000000045A8: D11C6A08 00021508
	v_add_u32_e32 v5, vcc, v5, v9                              // 0000000045B0: 320A1305
	v_addc_u32_e32 v8, vcc, 0, v8, vcc                         // 0000000045B4: 38101080
	v_mul_lo_u32 v9, v4, v8                                    // 0000000045B8: D2850009 00021104
	v_mul_hi_u32 v10, v4, v5                                   // 0000000045C0: D286000A 00020B04
	v_mul_hi_u32 v11, v4, v8                                   // 0000000045C8: D286000B 00021104
	v_mul_hi_u32 v12, v6, v8                                   // 0000000045D0: D286000C 00021106
	v_mul_lo_u32 v8, v6, v8                                    // 0000000045D8: D2850008 00021106
	v_add_u32_e32 v9, vcc, v10, v9                             // 0000000045E0: 3212130A
	v_addc_u32_e32 v10, vcc, v7, v11, vcc                      // 0000000045E4: 38141707
	v_mul_lo_u32 v11, v6, v5                                   // 0000000045E8: D285000B 00020B06
	v_mul_hi_u32 v5, v6, v5                                    // 0000000045F0: D2860005 00020B06
	v_add_u32_e32 v9, vcc, v9, v11                             // 0000000045F8: 32121709
	v_addc_u32_e32 v5, vcc, v10, v5, vcc                       // 0000000045FC: 380A0B0A
	v_addc_u32_e32 v9, vcc, v12, v16, vcc                      // 000000004600: 3812210C
	v_add_u32_e32 v5, vcc, v5, v8                              // 000000004604: 320A1105
	v_addc_u32_e32 v7, vcc, v7, v9, vcc                        // 000000004608: 380E1307
	v_mul_lo_u32 v7, v3, v7                                    // 00000000460C: D2850007 00020F03
	v_mul_hi_u32 v8, v3, v5                                    // 000000004614: D2860008 00020B03
	v_mul_lo_u32 v9, v3, v5                                    // 00000000461C: D2850009 00020B03
	v_add_u32_e32 v7, vcc, v8, v7                              // 000000004624: 320E0F08
	v_sub_u32_e32 v8, vcc, v4, v9                              // 000000004628: 34101304
	v_subb_u32_e32 v6, vcc, v6, v7, vcc                        // 00000000462C: 3A0C0F06
	v_sub_u32_e32 v7, vcc, v8, v3                              // 000000004630: 340E0708
	v_subbrev_u32_e32 v9, vcc, 0, v6, vcc                      // 000000004634: 3C120C80
	v_cmp_ge_u32_e32 vcc, v7, v3                               // 000000004638: 7D9C0707
	v_cndmask_b32_e64 v7, 0, -1, vcc                           // 00000000463C: D1000007 01A98280
	v_cmp_eq_u32_e32 vcc, 0, v9                                // 000000004644: 7D941280
	v_cndmask_b32_e32 v7, -1, v7, vcc                          // 000000004648: 000E0EC1
	v_add_u32_e32 v9, vcc, 2, v5                               // 00000000464C: 32120A82
	v_add_u32_e32 v10, vcc, 1, v5                              // 000000004650: 32140A81
	v_cmp_ge_u32_e32 vcc, v8, v3                               // 000000004654: 7D9C0708
	v_cndmask_b32_e64 v8, 0, -1, vcc                           // 000000004658: D1000008 01A98280
	v_cmp_eq_u32_e32 vcc, 0, v6                                // 000000004660: 7D940C80
	v_cndmask_b32_e32 v6, -1, v8, vcc                          // 000000004664: 000C10C1
	v_cmp_ne_u32_e32 vcc, 0, v7                                // 000000004668: 7D9A0E80
	v_cndmask_b32_e32 v7, v10, v9, vcc                         // 00000000466C: 000E130A
	v_cmp_ne_u32_e32 vcc, 0, v6                                // 000000004670: 7D9A0C80
	v_cndmask_b32_e32 v7, v5, v7, vcc                          // 000000004674: 000E0F05

0000000000004678 <BB0_6>:
	s_or_saveexec_b64 s[0:1], s[2:3]                           // 000000004678: BE802102
	s_xor_b64 exec, exec, s[0:1]                               // 00000000467C: 88FE007E
	s_cbranch_execz BB0_8                                      // 000000004680: BF880018
	v_cvt_f32_u32_e32 v5, v3                                   // 000000004684: 7E0A0D03
	v_sub_u32_e32 v6, vcc, 0, v3                               // 000000004688: 340C0680
	v_rcp_iflag_f32_e32 v5, v5                                 // 00000000468C: 7E0A4705
	v_mul_f32_e32 v5, 0x4f7ffffe, v5                           // 000000004690: 0A0A0AFF 4F7FFFFE
	v_cvt_u32_f32_e32 v5, v5                                   // 000000004698: 7E0A0F05
	v_mul_lo_u32 v6, v6, v5                                    // 00000000469C: D2850006 00020B06
	v_mul_hi_u32 v6, v5, v6                                    // 0000000046A4: D2860006 00020D05
	v_add_u32_e32 v5, vcc, v6, v5                              // 0000000046AC: 320A0B06
	v_mul_hi_u32 v5, v4, v5                                    // 0000000046B0: D2860005 00020B04
	v_mul_lo_u32 v6, v5, v3                                    // 0000000046B8: D2850006 00020705
	v_add_u32_e32 v7, vcc, 1, v5                               // 0000000046C0: 320E0A81
	v_sub_u32_e32 v4, vcc, v4, v6                              // 0000000046C4: 34080D04
	v_sub_u32_e32 v6, vcc, v4, v3                              // 0000000046C8: 340C0704
	v_cmp_ge_u32_e32 vcc, v4, v3                               // 0000000046CC: 7D9C0704
	v_cndmask_b32_e32 v5, v5, v7, vcc                          // 0000000046D0: 000A0F05
	v_cndmask_b32_e32 v4, v4, v6, vcc                          // 0000000046D4: 00080D04
	v_add_u32_e32 v6, vcc, 1, v5                               // 0000000046D8: 320C0A81
	v_cmp_ge_u32_e32 vcc, v4, v3                               // 0000000046DC: 7D9C0704
	v_cndmask_b32_e32 v7, v5, v6, vcc                          // 0000000046E0: 000E0D05

00000000000046e4 <BB0_8>:
	s_or_b64 exec, exec, s[0:1]                                // 0000000046E4: 87FE007E
	s_load_dwordx8 s[16:23], s[6:7], 0x18                      // 0000000046E8: C00E0403 00000018
	v_lshlrev_b32_e32 v3, 4, v7                                // 0000000046F0: 24060E84
	v_lshlrev_b32_e32 v2, 4, v2                                // 0000000046F4: 24040484
	v_add_u32_e32 v3, vcc, v3, v1                              // 0000000046F8: 32060303
	v_add_u32_e32 v2, vcc, v2, v0                              // 0000000046FC: 32040102
	s_cmp_lt_i32 s14, -14                                      // 000000004700: BF04CE0E
	v_mov_b32_e32 v4, 0                                        // 000000004704: 7E080280
	s_cbranch_scc1 BB0_51                                      // 000000004708: BF85011D
	s_add_i32 s0, s14, -1                                      // 00000000470C: 8100C10E
	s_ashr_i32 s1, s0, 31                                      // 000000004710: 90019F00
	s_lshr_b32 s1, s1, 28                                      // 000000004714: 8F019C01
	v_lshlrev_b32_e32 v4, 6, v1                                // 000000004718: 24080286
	s_movk_i32 s2, 0x400                                       // 00000000471C: B0020400
	s_add_i32 s0, s0, s1                                       // 000000004720: 81000100
	v_lshlrev_b32_e32 v5, 2, v0                                // 000000004724: 240A0082
	v_add_u32_e32 v6, vcc, s2, v4                              // 000000004728: 320C0802
	v_mul_lo_u32 v8, v3, s14                                   // 00000000472C: D2850008 00001D03
	v_add_u32_e64 v9, s[2:3], v4, v5                           // 000000004734: D1190209 00020B04
	s_ashr_i32 s5, s0, 4                                       // 00000000473C: 90058400
	v_add_u32_e32 v7, vcc, v6, v5                              // 000000004740: 320E0B06
	s_max_i32 s3, s5, 0                                        // 000000004744: 84038005
	v_cmp_gt_i32_e64 s[0:1], s12, v3                           // 000000004748: D0C40000 0002060C
	v_cmp_gt_i32_e32 vcc, s13, v2                              // 000000004750: 7D88040D
	s_mov_b32 s2, 0                                            // 000000004754: BE820080
	s_add_i32 s3, s3, 1                                        // 000000004758: 81038103
	s_mov_b32 s5, 15                                           // 00000000475C: BE85008F
	v_mov_b32_e32 v4, 0                                        // 000000004760: 7E080280
	s_xor_b64 s[0:1], s[0:1], -1                               // 000000004764: 8880C100
	s_xor_b64 s[6:7], vcc, -1                                  // 000000004768: 8886C16A
	s_branch BB0_11                                            // 00000000476C: BF820008

0000000000004770 <BB0_10>:
	s_add_i32 s2, s2, 1                                        // 000000004770: 81028102
	s_add_i32 s3, s3, -1                                       // 000000004774: 8103C103
	s_add_i32 s5, s5, 16                                       // 000000004778: 81059005
	s_cmp_eq_u32 s3, 0                                         // 00000000477C: BF068003
	s_waitcnt lgkmcnt(0)                                       // 000000004780: BF8C007F
	s_barrier                                                  // 000000004784: BF8A0000
	s_waitcnt lgkmcnt(0)                                       // 000000004788: BF8C007F
	s_cbranch_scc1 BB0_51                                      // 00000000478C: BF8500FC

0000000000004790 <BB0_11>:
	v_add_u32_e32 v10, vcc, s5, v0                             // 000000004790: 32140005
	v_add_u32_e32 v10, vcc, -15, v10                           // 000000004794: 321414CF
	v_cmp_le_i32_e32 vcc, s14, v10                             // 000000004798: 7D86140E
	s_or_b64 s[8:9], s[0:1], vcc                               // 00000000479C: 87886A00
	s_mov_b32 m0, -1                                           // 0000000047A0: BEFC00C1
	s_and_saveexec_b64 s[10:11], s[8:9]                        // 0000000047A4: BE8A2008
	s_xor_b64 s[8:9], exec, s[10:11]                           // 0000000047A8: 88880A7E
	v_mov_b32_e32 v10, 0                                       // 0000000047AC: 7E140280
	ds_write_b32 v7, v10                                       // 0000000047B0: D81A0000 00000A07
	s_or_saveexec_b64 s[10:11], s[8:9]                         // 0000000047B8: BE8A2108
	s_lshl_b32 s8, s2, 4                                       // 0000000047BC: 8E088402
	s_xor_b64 exec, exec, s[10:11]                             // 0000000047C0: 88FE0A7E
	s_cbranch_execz BB0_15                                     // 0000000047C4: BF88000E
	v_add_u32_e32 v10, vcc, s8, v0                             // 0000000047C8: 32140008
	v_add_u32_e32 v10, vcc, v10, v8                            // 0000000047CC: 3214110A
	v_ashrrev_i32_e32 v11, 31, v10                             // 0000000047D0: 2216149F
	v_lshlrev_b64 v[10:11], 2, v[10:11]                        // 0000000047D4: D28F000A 00021482
	s_waitcnt lgkmcnt(0)                                       // 0000000047DC: BF8C007F
	v_mov_b32_e32 v12, s17                                     // 0000000047E0: 7E180211
	v_add_u32_e32 v10, vcc, s16, v10                           // 0000000047E4: 32141410
	v_addc_u32_e32 v11, vcc, v12, v11, vcc                     // 0000000047E8: 3816170C
	flat_load_dword v10, v[10:11]                              // 0000000047EC: DC500000 0A00000A
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 0000000047F4: BF8C0070
	ds_write_b32 v7, v10                                       // 0000000047F8: D81A0000 00000A07

0000000000004800 <BB0_15>:
	s_or_b64 exec, exec, s[10:11]                              // 000000004800: 87FE0A7E
	v_add_u32_e32 v10, vcc, s5, v1                             // 000000004804: 32140205
	v_add_u32_e32 v10, vcc, -15, v10                           // 000000004808: 321414CF
	v_cmp_le_i32_e32 vcc, s14, v10                             // 00000000480C: 7D86140E
	s_or_b64 s[10:11], s[6:7], vcc                             // 000000004810: 878A6A06
	s_mov_b32 m0, -1                                           // 000000004814: BEFC00C1
	s_and_saveexec_b64 s[24:25], s[10:11]                      // 000000004818: BE98200A
	s_xor_b64 s[10:11], exec, s[24:25]                         // 00000000481C: 888A187E
	v_mov_b32_e32 v10, 0                                       // 000000004820: 7E140280
	ds_write_b32 v9, v10                                       // 000000004824: D81A0000 00000A09
	s_or_saveexec_b64 s[10:11], s[10:11]                       // 00000000482C: BE8A210A
	s_xor_b64 exec, exec, s[10:11]                             // 000000004830: 88FE0A7E
	s_cbranch_execz BB0_19                                     // 000000004834: BF880010
	v_add_u32_e32 v10, vcc, s8, v1                             // 000000004838: 32140208
	v_mul_lo_u32 v10, v10, s13                                 // 00000000483C: D285000A 00001B0A
	s_waitcnt lgkmcnt(0)                                       // 000000004844: BF8C007F
	v_mov_b32_e32 v12, s19                                     // 000000004848: 7E180213
	v_add_u32_e32 v10, vcc, v10, v2                            // 00000000484C: 3214050A
	v_ashrrev_i32_e32 v11, 31, v10                             // 000000004850: 2216149F
	v_lshlrev_b64 v[10:11], 2, v[10:11]                        // 000000004854: D28F000A 00021482
	v_add_u32_e32 v10, vcc, s18, v10                           // 00000000485C: 32141412
	v_addc_u32_e32 v11, vcc, v12, v11, vcc                     // 000000004860: 3816170C
	flat_load_dword v10, v[10:11]                              // 000000004864: DC500000 0A00000A
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 00000000486C: BF8C0070
	ds_write_b32 v9, v10                                       // 000000004870: D81A0000 00000A09

0000000000004878 <BB0_19>:
	s_or_b64 exec, exec, s[10:11]                              // 000000004878: 87FE0A7E
	s_add_i32 s8, s5, -15                                      // 00000000487C: 8108CF05
	s_cmp_ge_i32 s8, s14                                       // 000000004880: BF030E08
	s_waitcnt lgkmcnt(0)                                       // 000000004884: BF8C007F
	s_barrier                                                  // 000000004888: BF8A0000
	s_waitcnt lgkmcnt(0)                                       // 00000000488C: BF8C007F
	s_mov_b32 m0, -1                                           // 000000004890: BEFC00C1
	s_cbranch_scc0 BB0_35                                      // 000000004894: BF84002D
	s_add_i32 s8, s5, -14                                      // 000000004898: 8108CE05
	s_cmp_lt_i32 s8, s14                                       // 00000000489C: BF040E08
	s_cbranch_scc1 BB0_36                                      // 0000000048A0: BF850033

00000000000048a4 <BB0_21>:
	s_add_i32 s8, s5, -13                                      // 0000000048A4: 8108CD05
	s_cmp_ge_i32 s8, s14                                       // 0000000048A8: BF030E08
	s_cbranch_scc0 BB0_37                                      // 0000000048AC: BF840039

00000000000048b0 <BB0_22>:
	s_add_i32 s8, s5, -12                                      // 0000000048B0: 8108CC05
	s_cmp_ge_i32 s8, s14                                       // 0000000048B4: BF030E08
	s_cbranch_scc0 BB0_38                                      // 0000000048B8: BF84003F

00000000000048bc <BB0_23>:
	s_add_i32 s8, s5, -11                                      // 0000000048BC: 8108CB05
	s_cmp_ge_i32 s8, s14                                       // 0000000048C0: BF030E08
	s_cbranch_scc0 BB0_39                                      // 0000000048C4: BF840045

00000000000048c8 <BB0_24>:
	s_add_i32 s8, s5, -10                                      // 0000000048C8: 8108CA05
	s_cmp_ge_i32 s8, s14                                       // 0000000048CC: BF030E08
	s_cbranch_scc0 BB0_40                                      // 0000000048D0: BF84004B

00000000000048d4 <BB0_25>:
	s_add_i32 s8, s5, -9                                       // 0000000048D4: 8108C905
	s_cmp_ge_i32 s8, s14                                       // 0000000048D8: BF030E08
	s_cbranch_scc0 BB0_41                                      // 0000000048DC: BF840051

00000000000048e0 <BB0_26>:
	s_add_i32 s8, s5, -8                                       // 0000000048E0: 8108C805
	s_cmp_ge_i32 s8, s14                                       // 0000000048E4: BF030E08
	s_cbranch_scc0 BB0_42                                      // 0000000048E8: BF840057

00000000000048ec <BB0_27>:
	s_add_i32 s8, s5, -7                                       // 0000000048EC: 8108C705
	s_cmp_ge_i32 s8, s14                                       // 0000000048F0: BF030E08
	s_cbranch_scc0 BB0_43                                      // 0000000048F4: BF84005D

00000000000048f8 <BB0_28>:
	s_add_i32 s8, s5, -6                                       // 0000000048F8: 8108C605
	s_cmp_ge_i32 s8, s14                                       // 0000000048FC: BF030E08
	s_cbranch_scc0 BB0_44                                      // 000000004900: BF840063

0000000000004904 <BB0_29>:
	s_add_i32 s8, s5, -5                                       // 000000004904: 8108C505
	s_cmp_ge_i32 s8, s14                                       // 000000004908: BF030E08
	s_cbranch_scc0 BB0_45                                      // 00000000490C: BF840069

0000000000004910 <BB0_30>:
	s_add_i32 s8, s5, -4                                       // 000000004910: 8108C405
	s_cmp_ge_i32 s8, s14                                       // 000000004914: BF030E08
	s_cbranch_scc0 BB0_46                                      // 000000004918: BF84006F

000000000000491c <BB0_31>:
	s_add_i32 s8, s5, -3                                       // 00000000491C: 8108C305
	s_cmp_ge_i32 s8, s14                                       // 000000004920: BF030E08
	s_cbranch_scc0 BB0_47                                      // 000000004924: BF840075

0000000000004928 <BB0_32>:
	s_add_i32 s8, s5, -2                                       // 000000004928: 8108C205
	s_cmp_ge_i32 s8, s14                                       // 00000000492C: BF030E08
	s_cbranch_scc0 BB0_48                                      // 000000004930: BF84007B

0000000000004934 <BB0_33>:
	s_add_i32 s8, s5, -1                                       // 000000004934: 8108C105
	s_cmp_ge_i32 s8, s14                                       // 000000004938: BF030E08
	s_cbranch_scc0 BB0_49                                      // 00000000493C: BF840081

0000000000004940 <BB0_34>:
	s_cmp_ge_i32 s5, s14                                       // 000000004940: BF030E05
	s_cbranch_scc1 BB0_10                                      // 000000004944: BF85FF8A
	s_branch BB0_50                                            // 000000004948: BF820086

000000000000494c <BB0_35>:
	ds_read_b32 v10, v6                                        // 00000000494C: D86C0000 0A000006
	ds_read_b32 v11, v5                                        // 000000004954: D86C0000 0B000005
	s_waitcnt lgkmcnt(0)                                       // 00000000495C: BF8C007F
	v_mac_f32_e32 v4, v10, v11                                 // 000000004960: 2C08170A
	s_add_i32 s8, s5, -14                                      // 000000004964: 8108CE05
	s_cmp_lt_i32 s8, s14                                       // 000000004968: BF040E08
	s_cbranch_scc0 BB0_21                                      // 00000000496C: BF84FFCD

0000000000004970 <BB0_36>:
	ds_read_b32 v10, v6 offset:4                               // 000000004970: D86C0004 0A000006
	ds_read_b32 v11, v5 offset:64                              // 000000004978: D86C0040 0B000005
	s_waitcnt lgkmcnt(0)                                       // 000000004980: BF8C007F
	v_mac_f32_e32 v4, v10, v11                                 // 000000004984: 2C08170A
	s_add_i32 s8, s5, -13                                      // 000000004988: 8108CD05
	s_cmp_ge_i32 s8, s14                                       // 00000000498C: BF030E08
	s_cbranch_scc1 BB0_22                                      // 000000004990: BF85FFC7

0000000000004994 <BB0_37>:
	ds_read_b32 v10, v6 offset:8                               // 000000004994: D86C0008 0A000006
	ds_read_b32 v11, v5 offset:128                             // 00000000499C: D86C0080 0B000005
	s_waitcnt lgkmcnt(0)                                       // 0000000049A4: BF8C007F
	v_mac_f32_e32 v4, v10, v11                                 // 0000000049A8: 2C08170A
	s_add_i32 s8, s5, -12                                      // 0000000049AC: 8108CC05
	s_cmp_ge_i32 s8, s14                                       // 0000000049B0: BF030E08
	s_cbranch_scc1 BB0_23                                      // 0000000049B4: BF85FFC1

00000000000049b8 <BB0_38>:
	ds_read_b32 v10, v6 offset:12                              // 0000000049B8: D86C000C 0A000006
	ds_read_b32 v11, v5 offset:192                             // 0000000049C0: D86C00C0 0B000005
	s_waitcnt lgkmcnt(0)                                       // 0000000049C8: BF8C007F
	v_mac_f32_e32 v4, v10, v11                                 // 0000000049CC: 2C08170A
	s_add_i32 s8, s5, -11                                      // 0000000049D0: 8108CB05
	s_cmp_ge_i32 s8, s14                                       // 0000000049D4: BF030E08
	s_cbranch_scc1 BB0_24                                      // 0000000049D8: BF85FFBB

00000000000049dc <BB0_39>:
	ds_read_b32 v10, v6 offset:16                              // 0000000049DC: D86C0010 0A000006
	ds_read_b32 v11, v5 offset:256                             // 0000000049E4: D86C0100 0B000005
	s_waitcnt lgkmcnt(0)                                       // 0000000049EC: BF8C007F
	v_mac_f32_e32 v4, v10, v11                                 // 0000000049F0: 2C08170A
	s_add_i32 s8, s5, -10                                      // 0000000049F4: 8108CA05
	s_cmp_ge_i32 s8, s14                                       // 0000000049F8: BF030E08
	s_cbranch_scc1 BB0_25                                      // 0000000049FC: BF85FFB5

0000000000004a00 <BB0_40>:
	ds_read_b32 v10, v6 offset:20                              // 000000004A00: D86C0014 0A000006
	ds_read_b32 v11, v5 offset:320                             // 000000004A08: D86C0140 0B000005
	s_waitcnt lgkmcnt(0)                                       // 000000004A10: BF8C007F
	v_mac_f32_e32 v4, v10, v11                                 // 000000004A14: 2C08170A
	s_add_i32 s8, s5, -9                                       // 000000004A18: 8108C905
	s_cmp_ge_i32 s8, s14                                       // 000000004A1C: BF030E08
	s_cbranch_scc1 BB0_26                                      // 000000004A20: BF85FFAF

0000000000004a24 <BB0_41>:
	ds_read_b32 v10, v6 offset:24                              // 000000004A24: D86C0018 0A000006
	ds_read_b32 v11, v5 offset:384                             // 000000004A2C: D86C0180 0B000005
	s_waitcnt lgkmcnt(0)                                       // 000000004A34: BF8C007F
	v_mac_f32_e32 v4, v10, v11                                 // 000000004A38: 2C08170A
	s_add_i32 s8, s5, -8                                       // 000000004A3C: 8108C805
	s_cmp_ge_i32 s8, s14                                       // 000000004A40: BF030E08
	s_cbranch_scc1 BB0_27                                      // 000000004A44: BF85FFA9

0000000000004a48 <BB0_42>:
	ds_read_b32 v10, v6 offset:28                              // 000000004A48: D86C001C 0A000006
	ds_read_b32 v11, v5 offset:448                             // 000000004A50: D86C01C0 0B000005
	s_waitcnt lgkmcnt(0)                                       // 000000004A58: BF8C007F
	v_mac_f32_e32 v4, v10, v11                                 // 000000004A5C: 2C08170A
	s_add_i32 s8, s5, -7                                       // 000000004A60: 8108C705
	s_cmp_ge_i32 s8, s14                                       // 000000004A64: BF030E08
	s_cbranch_scc1 BB0_28                                      // 000000004A68: BF85FFA3

0000000000004a6c <BB0_43>:
	ds_read_b32 v10, v6 offset:32                              // 000000004A6C: D86C0020 0A000006
	ds_read_b32 v11, v5 offset:512                             // 000000004A74: D86C0200 0B000005
	s_waitcnt lgkmcnt(0)                                       // 000000004A7C: BF8C007F
	v_mac_f32_e32 v4, v10, v11                                 // 000000004A80: 2C08170A
	s_add_i32 s8, s5, -6                                       // 000000004A84: 8108C605
	s_cmp_ge_i32 s8, s14                                       // 000000004A88: BF030E08
	s_cbranch_scc1 BB0_29                                      // 000000004A8C: BF85FF9D

0000000000004a90 <BB0_44>:
	ds_read_b32 v10, v6 offset:36                              // 000000004A90: D86C0024 0A000006
	ds_read_b32 v11, v5 offset:576                             // 000000004A98: D86C0240 0B000005
	s_waitcnt lgkmcnt(0)                                       // 000000004AA0: BF8C007F
	v_mac_f32_e32 v4, v10, v11                                 // 000000004AA4: 2C08170A
	s_add_i32 s8, s5, -5                                       // 000000004AA8: 8108C505
	s_cmp_ge_i32 s8, s14                                       // 000000004AAC: BF030E08
	s_cbranch_scc1 BB0_30                                      // 000000004AB0: BF85FF97

0000000000004ab4 <BB0_45>:
	ds_read_b32 v10, v6 offset:40                              // 000000004AB4: D86C0028 0A000006
	ds_read_b32 v11, v5 offset:640                             // 000000004ABC: D86C0280 0B000005
	s_waitcnt lgkmcnt(0)                                       // 000000004AC4: BF8C007F
	v_mac_f32_e32 v4, v10, v11                                 // 000000004AC8: 2C08170A
	s_add_i32 s8, s5, -4                                       // 000000004ACC: 8108C405
	s_cmp_ge_i32 s8, s14                                       // 000000004AD0: BF030E08
	s_cbranch_scc1 BB0_31                                      // 000000004AD4: BF85FF91

0000000000004ad8 <BB0_46>:
	ds_read_b32 v10, v6 offset:44                              // 000000004AD8: D86C002C 0A000006
	ds_read_b32 v11, v5 offset:704                             // 000000004AE0: D86C02C0 0B000005
	s_waitcnt lgkmcnt(0)                                       // 000000004AE8: BF8C007F
	v_mac_f32_e32 v4, v10, v11                                 // 000000004AEC: 2C08170A
	s_add_i32 s8, s5, -3                                       // 000000004AF0: 8108C305
	s_cmp_ge_i32 s8, s14                                       // 000000004AF4: BF030E08
	s_cbranch_scc1 BB0_32                                      // 000000004AF8: BF85FF8B

0000000000004afc <BB0_47>:
	ds_read_b32 v10, v6 offset:48                              // 000000004AFC: D86C0030 0A000006
	ds_read_b32 v11, v5 offset:768                             // 000000004B04: D86C0300 0B000005
	s_waitcnt lgkmcnt(0)                                       // 000000004B0C: BF8C007F
	v_mac_f32_e32 v4, v10, v11                                 // 000000004B10: 2C08170A
	s_add_i32 s8, s5, -2                                       // 000000004B14: 8108C205
	s_cmp_ge_i32 s8, s14                                       // 000000004B18: BF030E08
	s_cbranch_scc1 BB0_33                                      // 000000004B1C: BF85FF85

0000000000004b20 <BB0_48>:
	ds_read_b32 v10, v6 offset:52                              // 000000004B20: D86C0034 0A000006
	ds_read_b32 v11, v5 offset:832                             // 000000004B28: D86C0340 0B000005
	s_waitcnt lgkmcnt(0)                                       // 000000004B30: BF8C007F
	v_mac_f32_e32 v4, v10, v11                                 // 000000004B34: 2C08170A
	s_add_i32 s8, s5, -1                                       // 000000004B38: 8108C105
	s_cmp_ge_i32 s8, s14                                       // 000000004B3C: BF030E08
	s_cbranch_scc1 BB0_34                                      // 000000004B40: BF85FF7F

0000000000004b44 <BB0_49>:
	ds_read_b32 v10, v6 offset:56                              // 000000004B44: D86C0038 0A000006
	ds_read_b32 v11, v5 offset:896                             // 000000004B4C: D86C0380 0B000005
	s_waitcnt lgkmcnt(0)                                       // 000000004B54: BF8C007F
	v_mac_f32_e32 v4, v10, v11                                 // 000000004B58: 2C08170A
	s_cmp_ge_i32 s5, s14                                       // 000000004B5C: BF030E05
	s_cbranch_scc1 BB0_10                                      // 000000004B60: BF85FF03

0000000000004b64 <BB0_50>:
	ds_read_b32 v10, v6 offset:60                              // 000000004B64: D86C003C 0A000006
	ds_read_b32 v11, v5 offset:960                             // 000000004B6C: D86C03C0 0B000005
	s_waitcnt lgkmcnt(0)                                       // 000000004B74: BF8C007F
	v_mac_f32_e32 v4, v10, v11                                 // 000000004B78: 2C08170A
	s_branch BB0_10                                            // 000000004B7C: BF82FEFC

0000000000004b80 <BB0_51>:
	v_cmp_gt_i32_e32 vcc, s12, v3                              // 000000004B80: 7D88060C
	v_cmp_gt_i32_e64 s[0:1], s13, v2                           // 000000004B84: D0C40000 0002040D
	s_and_b64 s[0:1], s[0:1], vcc                              // 000000004B8C: 86806A00
	s_and_saveexec_b64 s[2:3], s[0:1]                          // 000000004B90: BE822000
	s_cbranch_execz BB0_53                                     // 000000004B94: BF880014
	v_mul_lo_u32 v0, v3, s13                                   // 000000004B98: D2850000 00001B03
	s_waitcnt lgkmcnt(0)                                       // 000000004BA0: BF8C007F
	v_mov_b32_e32 v3, s21                                      // 000000004BA4: 7E060215
	v_mov_b32_e32 v5, s23                                      // 000000004BA8: 7E0A0217
	v_add_u32_e32 v0, vcc, v0, v2                              // 000000004BAC: 32000500
	v_ashrrev_i32_e32 v1, 31, v0                               // 000000004BB0: 2202009F
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 000000004BB4: D28F0000 00020082
	v_add_u32_e32 v2, vcc, s20, v0                             // 000000004BBC: 32040014
	v_addc_u32_e32 v3, vcc, v3, v1, vcc                        // 000000004BC0: 38060303
	flat_load_dword v2, v[2:3]                                 // 000000004BC4: DC500000 02000002
	v_add_u32_e32 v0, vcc, s22, v0                             // 000000004BCC: 32000016
	v_addc_u32_e32 v1, vcc, v5, v1, vcc                        // 000000004BD0: 38020305
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000004BD4: BF8C0070
	v_mul_f32_e32 v2, s4, v2                                   // 000000004BD8: 0A040404
	v_mac_f32_e32 v2, s15, v4                                  // 000000004BDC: 2C04080F
	flat_store_dword v[0:1], v2                                // 000000004BE0: DC700000 00000200

0000000000004be8 <BB0_53>:
	s_endpgm                                                   // 000000004BE8: BF810000
	s_nop 0                                                    // 000000004BEC: BF800000
	s_nop 0                                                    // 000000004BF0: BF800000
	s_nop 0                                                    // 000000004BF4: BF800000
	s_nop 0                                                    // 000000004BF8: BF800000
	s_nop 0                                                    // 000000004BFC: BF800000

0000000000004c00 <gemm_mul$local>:
	v_cndmask_b32_e32 v0, s1, v0, vcc                          // 000000004C00: 00000001
	v_cndmask_b32_e32 v0, s2, v0, vcc                          // 000000004C04: 00000002
	v_cndmask_b32_e32 v4, s1, v0, vcc                          // 000000004C08: 00080001
	v_cndmask_b32_e32 v1, s0, v128, vcc                        // 000000004C0C: 00030000
	v_cndmask_b32_e32 v0, v0, v0, vcc                          // 000000004C10: 00000100
		...
	v_cndmask_b32_e32 v86, 4, v0, vcc                          // 000000004C30: 00AC0084
	v_cndmask_b32_e32 v0, v144, v4, vcc                        // 000000004C34: 00000990
	v_cndmask_b32_e32 v5, s11, v0, vcc                         // 000000004C38: 000A000B
	v_cndmask_b32_e32 v0, s0, v0, vcc                          // 000000004C3C: 00000000
	v_cndmask_b32_e32 v0, s0, v4, vcc                          // 000000004C40: 00000800
	v_cndmask_b32_e32 v0, s0, v0, vcc                          // 000000004C44: 00000000
	v_cndmask_b32_e32 v0, xnack_mask_lo, v0, vcc               // 000000004C48: 00000068
		...
	v_cndmask_b32_e32 v9, s24, v0, vcc                         // 000000004C54: 00120018
		...
	v_subrev_f32_e32 v2, s4, v2                                // 000000004C64: 06040404
	.long 0xffffffff                                           // 000000004C68: FFFFFFFF
		...
	s_load_dword s10, s[6:7], 0x10                             // 000000004D00: C0020283 00000010
	s_mov_b32 s21, 0x4f7ffffe                                  // 000000004D08: BE9500FF 4F7FFFFE
	s_waitcnt lgkmcnt(0)                                       // 000000004D10: BF8C007F
	s_ashr_i32 s11, s10, 31                                    // 000000004D14: 900B9F0A
	s_add_i32 s0, s10, s11                                     // 000000004D18: 81000B0A
	s_xor_b32 s20, s0, s11                                     // 000000004D1C: 88140B00
	v_cvt_f32_u32_e32 v2, s20                                  // 000000004D20: 7E040C14
	s_load_dwordx4 s[12:15], s[6:7], 0x0                       // 000000004D24: C00A0303 00000000
	s_load_dwordx4 s[0:3], s[6:7], 0x30                        // 000000004D2C: C00A0003 00000030
	s_waitcnt lgkmcnt(0)                                       // 000000004D34: BF8C007F
	s_load_dword s1, s[4:5], 0x4                               // 000000004D38: C0020042 00000004
	s_load_dwordx4 s[16:19], s[6:7], 0x18                      // 000000004D40: C00A0403 00000018
	s_load_dwordx2 s[4:5], s[6:7], 0x28                        // 000000004D48: C0060103 00000028
	v_rcp_iflag_f32_e32 v2, v2                                 // 000000004D50: 7E044702
	s_waitcnt lgkmcnt(0)                                       // 000000004D54: BF8C007F
	s_and_b32 s3, s1, 0xffff                                   // 000000004D58: 8603FF01 0000FFFF
	v_mul_f32_e32 v2, s21, v2                                  // 000000004D60: 0A040415
	v_cvt_u32_f32_e32 v2, v2                                   // 000000004D64: 7E040F02
	s_mul_i32 s8, s8, s3                                       // 000000004D68: 92080308
	s_sub_i32 s3, 0, s20                                       // 000000004D6C: 81831480
	s_add_i32 s0, s0, s8                                       // 000000004D70: 81000800
	v_mul_lo_u32 v3, s3, v2                                    // 000000004D74: D2850003 00020403
	v_add_u32_e32 v4, vcc, s0, v0                              // 000000004D7C: 32080000
	v_ashrrev_i32_e32 v5, 31, v4                               // 000000004D80: 220A089F
	v_add_u32_e32 v6, vcc, v4, v5                              // 000000004D84: 320C0B04
	v_mul_hi_u32 v3, v2, v3                                    // 000000004D88: D2860003 00020702
	v_xor_b32_e32 v6, v6, v5                                   // 000000004D90: 2A0C0B06
	s_lshr_b32 s0, s1, 16                                      // 000000004D94: 8F009001
	s_mul_i32 s9, s9, s0                                       // 000000004D98: 92090009
	v_add_u32_e32 v2, vcc, v3, v2                              // 000000004D9C: 32040503
	v_mul_hi_u32 v2, v6, v2                                    // 000000004DA0: D2860002 00020506
	v_xor_b32_e32 v5, s11, v5                                  // 000000004DA8: 2A0A0A0B
	s_add_i32 s2, s2, s9                                       // 000000004DAC: 81020902
	v_mul_lo_u32 v3, v2, s20                                   // 000000004DB0: D2850003 00002902
	v_sub_u32_e32 v3, vcc, v6, v3                              // 000000004DB8: 34060706
	v_add_u32_e32 v6, vcc, 1, v2                               // 000000004DBC: 320C0481
	v_cmp_le_u32_e32 vcc, s20, v3                              // 000000004DC0: 7D960614
	v_cndmask_b32_e32 v2, v2, v6, vcc                          // 000000004DC4: 00040D02
	v_subrev_u32_e64 v6, s[0:1], s20, v3                       // 000000004DC8: D11B0006 00020614
	v_cndmask_b32_e32 v3, v3, v6, vcc                          // 000000004DD0: 00060D03
	v_add_u32_e32 v6, vcc, 1, v2                               // 000000004DD4: 320C0481
	v_cmp_le_u32_e32 vcc, s20, v3                              // 000000004DD8: 7D960614
	s_ashr_i32 s0, s15, 31                                     // 000000004DDC: 90009F0F
	v_cndmask_b32_e32 v2, v2, v6, vcc                          // 000000004DE0: 00040D02
	s_add_i32 s1, s15, s0                                      // 000000004DE4: 8101000F
	v_xor_b32_e32 v2, v2, v5                                   // 000000004DE8: 2A040B02
	s_xor_b32 s3, s1, s0                                       // 000000004DEC: 88030001
	v_sub_u32_e32 v2, vcc, v2, v5                              // 000000004DF0: 34040B02
	v_cvt_f32_u32_e32 v5, s3                                   // 000000004DF4: 7E0A0C03
	v_mul_lo_u32 v6, v2, s10                                   // 000000004DF8: D2850006 00001502
	s_sub_i32 s1, 0, s3                                        // 000000004E00: 81810380
	v_add_u32_e32 v3, vcc, s2, v1                              // 000000004E04: 32060202
	v_rcp_iflag_f32_e32 v5, v5                                 // 000000004E08: 7E0A4705
	v_sub_u32_e32 v4, vcc, v4, v6                              // 000000004E0C: 34080D04
	v_ashrrev_i32_e32 v6, 31, v4                               // 000000004E10: 220C089F
	v_lshrrev_b32_e32 v6, 28, v6                               // 000000004E14: 200C0C9C
	v_mul_f32_e32 v5, s21, v5                                  // 000000004E18: 0A0A0A15
	v_cvt_u32_f32_e32 v5, v5                                   // 000000004E1C: 7E0A0F05
	v_add_u32_e32 v4, vcc, v4, v6                              // 000000004E20: 32080D04
	v_and_b32_e32 v13, -16, v4                                 // 000000004E24: 261A08D0
	v_ashrrev_i32_e32 v6, 31, v3                               // 000000004E28: 220C069F
	v_mul_lo_u32 v4, s1, v5                                    // 000000004E2C: D2850004 00020A01
	s_add_i32 s1, s14, -1                                      // 000000004E34: 8101C10E
	s_ashr_i32 s2, s1, 31                                      // 000000004E38: 90029F01
	s_add_i32 s1, s1, s2                                       // 000000004E3C: 81010201
	v_mul_hi_u32 v4, v5, v4                                    // 000000004E40: D2860004 00020905
	s_xor_b32 s1, s1, s2                                       // 000000004E48: 88010201
	s_xor_b32 s2, s2, s0                                       // 000000004E4C: 88020002
	v_add_u32_e32 v4, vcc, v4, v5                              // 000000004E50: 32080B04
	v_mul_hi_u32 v4, s1, v4                                    // 000000004E54: D2860004 00020801
	v_lshrrev_b32_e32 v5, 28, v6                               // 000000004E5C: 200A0C9C
	v_add_u32_e32 v5, vcc, v3, v5                              // 000000004E60: 320A0B03
	v_and_b32_e32 v5, -16, v5                                  // 000000004E64: 260A0AD0
	v_mul_lo_u32 v6, v4, s3                                    // 000000004E68: D2850006 00000704
	v_add_u32_e32 v7, vcc, 1, v4                               // 000000004E70: 320E0881
	v_sub_u32_e32 v6, vcc, s1, v6                              // 000000004E74: 340C0C01
	v_cmp_le_u32_e64 s[0:1], s3, v6                            // 000000004E78: D0CB0000 00020C03
	v_cndmask_b32_e64 v4, v4, v7, s[0:1]                       // 000000004E80: D1000004 00020F04
	v_subrev_u32_e32 v7, vcc, s3, v6                           // 000000004E88: 360E0C03
	v_cndmask_b32_e64 v6, v6, v7, s[0:1]                       // 000000004E8C: D1000006 00020F06
	v_add_u32_e32 v7, vcc, 1, v4                               // 000000004E94: 320E0881
	v_cmp_le_u32_e32 vcc, s3, v6                               // 000000004E98: 7D960C03
	v_cndmask_b32_e32 v4, v4, v7, vcc                          // 000000004E9C: 00080F04
	v_xor_b32_e32 v4, s2, v4                                   // 000000004EA0: 2A080802
	v_subrev_u32_e32 v6, vcc, s2, v4                           // 000000004EA4: 360C0802
	v_add_u32_e32 v5, vcc, v5, v1                              // 000000004EA8: 320A0305
	v_add_u32_e32 v4, vcc, v13, v0                             // 000000004EAC: 3208010D
	v_cmp_gt_i32_e32 vcc, -15, v6                              // 000000004EB0: 7D880CCF
	s_and_b64 vcc, exec, vcc                                   // 000000004EB4: 86EA6A7E
	v_mov_b32_e32 v7, 0                                        // 000000004EB8: 7E0E0280
	s_cbranch_vccnz BB1_43                                     // 000000004EBC: BF870143
	v_add_u32_e32 v12, vcc, 1, v6                              // 000000004EC0: 32180C81
	v_mul_lo_u32 v14, v12, v2                                  // 000000004EC4: D285000E 0002050C
	v_lshlrev_b32_e32 v11, 6, v1                               // 000000004ECC: 24160286
	v_ashrrev_i32_e32 v7, 31, v6                               // 000000004ED0: 220E0C9F
	v_lshrrev_b32_e32 v7, 28, v7                               // 000000004ED4: 200E0E9C
	v_add_u32_e32 v1, vcc, v1, v14                             // 000000004ED8: 32021D01
	v_mul_lo_u32 v15, s13, v1                                  // 000000004EDC: D285000F 0002020D
	v_add_u32_e32 v7, vcc, v7, v6                              // 000000004EE4: 320E0D07
	v_ashrrev_i32_e32 v7, 4, v7                                // 000000004EE8: 220E0E84
	v_add_u32_e32 v12, vcc, 1, v7                              // 000000004EEC: 32180E81
	v_add_u32_e32 v7, vcc, v0, v15                             // 000000004EF0: 320E1F00
	v_add_u32_e32 v13, vcc, v7, v13                            // 000000004EF4: 321A1B07
	v_mul_lo_u32 v7, s14, v5                                   // 000000004EF8: D2850007 00020A0E
	v_cmp_gt_i32_e64 s[2:3], s13, v4                           // 000000004F00: D0C40002 0002080D
	v_cmp_gt_i32_e64 s[0:1], s12, v5                           // 000000004F08: D0C40000 00020A0C
	v_lshlrev_b32_e32 v8, 2, v0                                // 000000004F10: 24100082
	v_add_u32_e32 v9, vcc, 0x400, v11                          // 000000004F14: 321216FF 00000400
	v_add_u32_e32 v0, vcc, v0, v14                             // 000000004F1C: 32001D00
	v_add_u32_e32 v15, vcc, v0, v7                             // 000000004F20: 321E0F00
	v_add_u32_e32 v10, vcc, v9, v8                             // 000000004F24: 32141109
	v_add_u32_e32 v11, vcc, v11, v8                            // 000000004F28: 3216110B
	s_lshl_b32 s6, s13, 4                                      // 000000004F2C: 8E06840D
	s_mov_b32 s7, 15                                           // 000000004F30: BE87008F
	v_mov_b32_e32 v7, 0                                        // 000000004F34: 7E0E0280
	s_xor_b64 s[8:9], s[0:1], -1                               // 000000004F38: 8888C100
	s_xor_b64 s[2:3], s[2:3], -1                               // 000000004F3C: 8882C102
	s_branch BB1_3                                             // 000000004F40: BF82000A

0000000000004f44 <BB1_2>:
	v_add_u32_e32 v12, vcc, -1, v12                            // 000000004F44: 321818C1
	v_cmp_eq_u32_e32 vcc, 0, v12                               // 000000004F48: 7D941880
	s_add_i32 s7, s7, 16                                       // 000000004F4C: 81079007
	s_and_b64 vcc, exec, vcc                                   // 000000004F50: 86EA6A7E
	v_add_u32_e64 v13, s[0:1], s6, v13                         // 000000004F54: D119000D 00021A06
	s_waitcnt lgkmcnt(0)                                       // 000000004F5C: BF8C007F
	s_barrier                                                  // 000000004F60: BF8A0000
	s_waitcnt lgkmcnt(0)                                       // 000000004F64: BF8C007F
	s_cbranch_vccnz BB1_43                                     // 000000004F68: BF870118

0000000000004f6c <BB1_3>:
	v_add_u32_e32 v14, vcc, s7, v0                             // 000000004F6C: 321C0007
	v_add_u32_e32 v14, vcc, -15, v14                           // 000000004F70: 321C1CCF
	v_cmp_le_i32_e32 vcc, s14, v14                             // 000000004F74: 7D861C0E
	s_or_b64 s[0:1], s[8:9], vcc                               // 000000004F78: 87806A08
	s_mov_b32 m0, -1                                           // 000000004F7C: BEFC00C1
	s_and_saveexec_b64 s[10:11], s[0:1]                        // 000000004F80: BE8A2000
	s_xor_b64 s[0:1], exec, s[10:11]                           // 000000004F84: 88800A7E
	v_mov_b32_e32 v14, 0                                       // 000000004F88: 7E1C0280
	ds_write_b32 v10, v14                                      // 000000004F8C: D81A0000 00000E0A
	s_or_saveexec_b64 s[0:1], s[0:1]                           // 000000004F94: BE802100
	s_xor_b64 exec, exec, s[0:1]                               // 000000004F98: 88FE007E
	s_cbranch_execz BB1_7                                      // 000000004F9C: BF88000D
	v_add_u32_e32 v14, vcc, s7, v15                            // 000000004FA0: 321C1E07
	v_add_u32_e32 v16, vcc, -15, v14                           // 000000004FA4: 32201CCF
	v_ashrrev_i32_e32 v17, 31, v16                             // 000000004FA8: 2222209F
	v_lshlrev_b64 v[16:17], 2, v[16:17]                        // 000000004FAC: D28F0010 00022082
	v_mov_b32_e32 v14, s17                                     // 000000004FB4: 7E1C0211
	v_add_u32_e32 v16, vcc, s16, v16                           // 000000004FB8: 32202010
	v_addc_u32_e32 v17, vcc, v14, v17, vcc                     // 000000004FBC: 3822230E
	flat_load_dword v14, v[16:17]                              // 000000004FC0: DC500000 0E000010
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000004FC8: BF8C0070
	ds_write_b32 v10, v14                                      // 000000004FCC: D81A0000 00000E0A

0000000000004fd4 <BB1_7>:
	s_or_b64 exec, exec, s[0:1]                                // 000000004FD4: 87FE007E
	v_add_u32_e32 v14, vcc, s7, v1                             // 000000004FD8: 321C0207
	v_add_u32_e32 v14, vcc, -15, v14                           // 000000004FDC: 321C1CCF
	v_cmp_le_i32_e32 vcc, s14, v14                             // 000000004FE0: 7D861C0E
	s_or_b64 s[0:1], s[2:3], vcc                               // 000000004FE4: 87806A02
	s_mov_b32 m0, -1                                           // 000000004FE8: BEFC00C1
	s_and_saveexec_b64 s[10:11], s[0:1]                        // 000000004FEC: BE8A2000
	s_xor_b64 s[0:1], exec, s[10:11]                           // 000000004FF0: 88800A7E
	v_mov_b32_e32 v14, 0                                       // 000000004FF4: 7E1C0280
	ds_write_b32 v11, v14                                      // 000000004FF8: D81A0000 00000E0B
	s_or_saveexec_b64 s[0:1], s[0:1]                           // 000000005000: BE802100
	s_xor_b64 exec, exec, s[0:1]                               // 000000005004: 88FE007E
	s_cbranch_execz BB1_11                                     // 000000005008: BF88000B
	v_ashrrev_i32_e32 v14, 31, v13                             // 00000000500C: 221C1A9F
	v_lshlrev_b64 v[16:17], 2, v[13:14]                        // 000000005010: D28F0010 00021A82
	v_mov_b32_e32 v14, s19                                     // 000000005018: 7E1C0213
	v_add_u32_e32 v16, vcc, s18, v16                           // 00000000501C: 32202012
	v_addc_u32_e32 v17, vcc, v14, v17, vcc                     // 000000005020: 3822230E
	flat_load_dword v14, v[16:17]                              // 000000005024: DC500000 0E000010
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 00000000502C: BF8C0070
	ds_write_b32 v11, v14                                      // 000000005030: D81A0000 00000E0B

0000000000005038 <BB1_11>:
	s_or_b64 exec, exec, s[0:1]                                // 000000005038: 87FE007E
	s_add_i32 s0, s7, -15                                      // 00000000503C: 8100CF07
	v_mov_b32_e32 v14, s14                                     // 000000005040: 7E1C020E
	v_cmp_ge_i32_e32 vcc, s0, v14                              // 000000005044: 7D8C1C00
	v_cmp_gt_i32_e64 s[0:1], s0, v6                            // 000000005048: D0C40000 00020C00
	s_or_b64 s[0:1], vcc, s[0:1]                               // 000000005050: 8780006A
	s_and_b64 vcc, exec, s[0:1]                                // 000000005054: 86EA007E
	s_waitcnt lgkmcnt(0)                                       // 000000005058: BF8C007F
	s_barrier                                                  // 00000000505C: BF8A0000
	s_waitcnt lgkmcnt(0)                                       // 000000005060: BF8C007F
	s_mov_b32 m0, -1                                           // 000000005064: BEFC00C1
	s_cbranch_vccnz BB1_13                                     // 000000005068: BF870006
	ds_read_b32 v14, v9                                        // 00000000506C: D86C0000 0E000009
	ds_read_b32 v16, v8                                        // 000000005074: D86C0000 10000008
	s_waitcnt lgkmcnt(0)                                       // 00000000507C: BF8C007F
	v_mac_f32_e32 v7, v14, v16                                 // 000000005080: 2C0E210E

0000000000005084 <BB1_13>:
	s_add_i32 s0, s7, -14                                      // 000000005084: 8100CE07
	v_mov_b32_e32 v14, s14                                     // 000000005088: 7E1C020E
	v_cmp_lt_i32_e32 vcc, s0, v14                              // 00000000508C: 7D821C00
	v_cmp_le_i32_e64 s[0:1], s0, v6                            // 000000005090: D0C30000 00020C00
	s_and_b64 s[0:1], vcc, s[0:1]                              // 000000005098: 8680006A
	s_and_b64 vcc, exec, s[0:1]                                // 00000000509C: 86EA007E
	s_cbranch_vccz BB1_15                                      // 0000000050A0: BF860006
	ds_read_b32 v14, v9 offset:4                               // 0000000050A4: D86C0004 0E000009
	ds_read_b32 v16, v8 offset:64                              // 0000000050AC: D86C0040 10000008
	s_waitcnt lgkmcnt(0)                                       // 0000000050B4: BF8C007F
	v_mac_f32_e32 v7, v14, v16                                 // 0000000050B8: 2C0E210E

00000000000050bc <BB1_15>:
	s_add_i32 s0, s7, -13                                      // 0000000050BC: 8100CD07
	v_mov_b32_e32 v14, s14                                     // 0000000050C0: 7E1C020E
	v_cmp_ge_i32_e32 vcc, s0, v14                              // 0000000050C4: 7D8C1C00
	v_cmp_gt_i32_e64 s[0:1], s0, v6                            // 0000000050C8: D0C40000 00020C00
	s_or_b64 s[0:1], vcc, s[0:1]                               // 0000000050D0: 8780006A
	s_and_b64 vcc, exec, s[0:1]                                // 0000000050D4: 86EA007E
	s_cbranch_vccnz BB1_17                                     // 0000000050D8: BF870006
	ds_read_b32 v14, v9 offset:8                               // 0000000050DC: D86C0008 0E000009
	ds_read_b32 v16, v8 offset:128                             // 0000000050E4: D86C0080 10000008
	s_waitcnt lgkmcnt(0)                                       // 0000000050EC: BF8C007F
	v_mac_f32_e32 v7, v14, v16                                 // 0000000050F0: 2C0E210E

00000000000050f4 <BB1_17>:
	s_add_i32 s0, s7, -12                                      // 0000000050F4: 8100CC07
	v_mov_b32_e32 v14, s14                                     // 0000000050F8: 7E1C020E
	v_cmp_ge_i32_e32 vcc, s0, v14                              // 0000000050FC: 7D8C1C00
	v_cmp_gt_i32_e64 s[0:1], s0, v6                            // 000000005100: D0C40000 00020C00
	s_or_b64 s[0:1], vcc, s[0:1]                               // 000000005108: 8780006A
	s_and_b64 vcc, exec, s[0:1]                                // 00000000510C: 86EA007E
	s_cbranch_vccnz BB1_19                                     // 000000005110: BF870006
	ds_read_b32 v14, v9 offset:12                              // 000000005114: D86C000C 0E000009
	ds_read_b32 v16, v8 offset:192                             // 00000000511C: D86C00C0 10000008
	s_waitcnt lgkmcnt(0)                                       // 000000005124: BF8C007F
	v_mac_f32_e32 v7, v14, v16                                 // 000000005128: 2C0E210E

000000000000512c <BB1_19>:
	s_add_i32 s0, s7, -11                                      // 00000000512C: 8100CB07
	v_mov_b32_e32 v14, s14                                     // 000000005130: 7E1C020E
	v_cmp_ge_i32_e32 vcc, s0, v14                              // 000000005134: 7D8C1C00
	v_cmp_gt_i32_e64 s[0:1], s0, v6                            // 000000005138: D0C40000 00020C00
	s_or_b64 s[0:1], vcc, s[0:1]                               // 000000005140: 8780006A
	s_and_b64 vcc, exec, s[0:1]                                // 000000005144: 86EA007E
	s_cbranch_vccnz BB1_21                                     // 000000005148: BF870006
	ds_read_b32 v14, v9 offset:16                              // 00000000514C: D86C0010 0E000009
	ds_read_b32 v16, v8 offset:256                             // 000000005154: D86C0100 10000008
	s_waitcnt lgkmcnt(0)                                       // 00000000515C: BF8C007F
	v_mac_f32_e32 v7, v14, v16                                 // 000000005160: 2C0E210E

0000000000005164 <BB1_21>:
	s_add_i32 s0, s7, -10                                      // 000000005164: 8100CA07
	v_mov_b32_e32 v14, s14                                     // 000000005168: 7E1C020E
	v_cmp_ge_i32_e32 vcc, s0, v14                              // 00000000516C: 7D8C1C00
	v_cmp_gt_i32_e64 s[0:1], s0, v6                            // 000000005170: D0C40000 00020C00
	s_or_b64 s[0:1], vcc, s[0:1]                               // 000000005178: 8780006A
	s_and_b64 vcc, exec, s[0:1]                                // 00000000517C: 86EA007E
	s_cbranch_vccnz BB1_23                                     // 000000005180: BF870006
	ds_read_b32 v14, v9 offset:20                              // 000000005184: D86C0014 0E000009
	ds_read_b32 v16, v8 offset:320                             // 00000000518C: D86C0140 10000008
	s_waitcnt lgkmcnt(0)                                       // 000000005194: BF8C007F
	v_mac_f32_e32 v7, v14, v16                                 // 000000005198: 2C0E210E

000000000000519c <BB1_23>:
	s_add_i32 s0, s7, -9                                       // 00000000519C: 8100C907
	v_mov_b32_e32 v14, s14                                     // 0000000051A0: 7E1C020E
	v_cmp_ge_i32_e32 vcc, s0, v14                              // 0000000051A4: 7D8C1C00
	v_cmp_gt_i32_e64 s[0:1], s0, v6                            // 0000000051A8: D0C40000 00020C00
	s_or_b64 s[0:1], vcc, s[0:1]                               // 0000000051B0: 8780006A
	s_and_b64 vcc, exec, s[0:1]                                // 0000000051B4: 86EA007E
	s_cbranch_vccnz BB1_25                                     // 0000000051B8: BF870006
	ds_read_b32 v14, v9 offset:24                              // 0000000051BC: D86C0018 0E000009
	ds_read_b32 v16, v8 offset:384                             // 0000000051C4: D86C0180 10000008
	s_waitcnt lgkmcnt(0)                                       // 0000000051CC: BF8C007F
	v_mac_f32_e32 v7, v14, v16                                 // 0000000051D0: 2C0E210E

00000000000051d4 <BB1_25>:
	s_add_i32 s0, s7, -8                                       // 0000000051D4: 8100C807
	v_mov_b32_e32 v14, s14                                     // 0000000051D8: 7E1C020E
	v_cmp_ge_i32_e32 vcc, s0, v14                              // 0000000051DC: 7D8C1C00
	v_cmp_gt_i32_e64 s[0:1], s0, v6                            // 0000000051E0: D0C40000 00020C00
	s_or_b64 s[0:1], vcc, s[0:1]                               // 0000000051E8: 8780006A
	s_and_b64 vcc, exec, s[0:1]                                // 0000000051EC: 86EA007E
	s_cbranch_vccnz BB1_27                                     // 0000000051F0: BF870006
	ds_read_b32 v14, v9 offset:28                              // 0000000051F4: D86C001C 0E000009
	ds_read_b32 v16, v8 offset:448                             // 0000000051FC: D86C01C0 10000008
	s_waitcnt lgkmcnt(0)                                       // 000000005204: BF8C007F
	v_mac_f32_e32 v7, v14, v16                                 // 000000005208: 2C0E210E

000000000000520c <BB1_27>:
	s_add_i32 s0, s7, -7                                       // 00000000520C: 8100C707
	v_mov_b32_e32 v14, s14                                     // 000000005210: 7E1C020E
	v_cmp_ge_i32_e32 vcc, s0, v14                              // 000000005214: 7D8C1C00
	v_cmp_gt_i32_e64 s[0:1], s0, v6                            // 000000005218: D0C40000 00020C00
	s_or_b64 s[0:1], vcc, s[0:1]                               // 000000005220: 8780006A
	s_and_b64 vcc, exec, s[0:1]                                // 000000005224: 86EA007E
	s_cbranch_vccnz BB1_29                                     // 000000005228: BF870006
	ds_read_b32 v14, v9 offset:32                              // 00000000522C: D86C0020 0E000009
	ds_read_b32 v16, v8 offset:512                             // 000000005234: D86C0200 10000008
	s_waitcnt lgkmcnt(0)                                       // 00000000523C: BF8C007F
	v_mac_f32_e32 v7, v14, v16                                 // 000000005240: 2C0E210E

0000000000005244 <BB1_29>:
	s_add_i32 s0, s7, -6                                       // 000000005244: 8100C607
	v_mov_b32_e32 v14, s14                                     // 000000005248: 7E1C020E
	v_cmp_ge_i32_e32 vcc, s0, v14                              // 00000000524C: 7D8C1C00
	v_cmp_gt_i32_e64 s[0:1], s0, v6                            // 000000005250: D0C40000 00020C00
	s_or_b64 s[0:1], vcc, s[0:1]                               // 000000005258: 8780006A
	s_and_b64 vcc, exec, s[0:1]                                // 00000000525C: 86EA007E
	s_cbranch_vccnz BB1_31                                     // 000000005260: BF870006
	ds_read_b32 v14, v9 offset:36                              // 000000005264: D86C0024 0E000009
	ds_read_b32 v16, v8 offset:576                             // 00000000526C: D86C0240 10000008
	s_waitcnt lgkmcnt(0)                                       // 000000005274: BF8C007F
	v_mac_f32_e32 v7, v14, v16                                 // 000000005278: 2C0E210E

000000000000527c <BB1_31>:
	s_add_i32 s0, s7, -5                                       // 00000000527C: 8100C507
	v_mov_b32_e32 v14, s14                                     // 000000005280: 7E1C020E
	v_cmp_ge_i32_e32 vcc, s0, v14                              // 000000005284: 7D8C1C00
	v_cmp_gt_i32_e64 s[0:1], s0, v6                            // 000000005288: D0C40000 00020C00
	s_or_b64 s[0:1], vcc, s[0:1]                               // 000000005290: 8780006A
	s_and_b64 vcc, exec, s[0:1]                                // 000000005294: 86EA007E
	s_cbranch_vccnz BB1_33                                     // 000000005298: BF870006
	ds_read_b32 v14, v9 offset:40                              // 00000000529C: D86C0028 0E000009
	ds_read_b32 v16, v8 offset:640                             // 0000000052A4: D86C0280 10000008
	s_waitcnt lgkmcnt(0)                                       // 0000000052AC: BF8C007F
	v_mac_f32_e32 v7, v14, v16                                 // 0000000052B0: 2C0E210E

00000000000052b4 <BB1_33>:
	s_add_i32 s0, s7, -4                                       // 0000000052B4: 8100C407
	v_mov_b32_e32 v14, s14                                     // 0000000052B8: 7E1C020E
	v_cmp_ge_i32_e32 vcc, s0, v14                              // 0000000052BC: 7D8C1C00
	v_cmp_gt_i32_e64 s[0:1], s0, v6                            // 0000000052C0: D0C40000 00020C00
	s_or_b64 s[0:1], vcc, s[0:1]                               // 0000000052C8: 8780006A
	s_and_b64 vcc, exec, s[0:1]                                // 0000000052CC: 86EA007E
	s_cbranch_vccnz BB1_35                                     // 0000000052D0: BF870006
	ds_read_b32 v14, v9 offset:44                              // 0000000052D4: D86C002C 0E000009
	ds_read_b32 v16, v8 offset:704                             // 0000000052DC: D86C02C0 10000008
	s_waitcnt lgkmcnt(0)                                       // 0000000052E4: BF8C007F
	v_mac_f32_e32 v7, v14, v16                                 // 0000000052E8: 2C0E210E

00000000000052ec <BB1_35>:
	s_add_i32 s0, s7, -3                                       // 0000000052EC: 8100C307
	v_mov_b32_e32 v14, s14                                     // 0000000052F0: 7E1C020E
	v_cmp_ge_i32_e32 vcc, s0, v14                              // 0000000052F4: 7D8C1C00
	v_cmp_gt_i32_e64 s[0:1], s0, v6                            // 0000000052F8: D0C40000 00020C00
	s_or_b64 s[0:1], vcc, s[0:1]                               // 000000005300: 8780006A
	s_and_b64 vcc, exec, s[0:1]                                // 000000005304: 86EA007E
	s_cbranch_vccnz BB1_37                                     // 000000005308: BF870006
	ds_read_b32 v14, v9 offset:48                              // 00000000530C: D86C0030 0E000009
	ds_read_b32 v16, v8 offset:768                             // 000000005314: D86C0300 10000008
	s_waitcnt lgkmcnt(0)                                       // 00000000531C: BF8C007F
	v_mac_f32_e32 v7, v14, v16                                 // 000000005320: 2C0E210E

0000000000005324 <BB1_37>:
	s_add_i32 s0, s7, -2                                       // 000000005324: 8100C207
	v_mov_b32_e32 v14, s14                                     // 000000005328: 7E1C020E
	v_cmp_ge_i32_e32 vcc, s0, v14                              // 00000000532C: 7D8C1C00
	v_cmp_gt_i32_e64 s[0:1], s0, v6                            // 000000005330: D0C40000 00020C00
	s_or_b64 s[0:1], vcc, s[0:1]                               // 000000005338: 8780006A
	s_and_b64 vcc, exec, s[0:1]                                // 00000000533C: 86EA007E
	s_cbranch_vccnz BB1_39                                     // 000000005340: BF870006
	ds_read_b32 v14, v9 offset:52                              // 000000005344: D86C0034 0E000009
	ds_read_b32 v16, v8 offset:832                             // 00000000534C: D86C0340 10000008
	s_waitcnt lgkmcnt(0)                                       // 000000005354: BF8C007F
	v_mac_f32_e32 v7, v14, v16                                 // 000000005358: 2C0E210E

000000000000535c <BB1_39>:
	s_add_i32 s0, s7, -1                                       // 00000000535C: 8100C107
	v_mov_b32_e32 v14, s14                                     // 000000005360: 7E1C020E
	v_cmp_ge_i32_e32 vcc, s0, v14                              // 000000005364: 7D8C1C00
	v_cmp_gt_i32_e64 s[0:1], s0, v6                            // 000000005368: D0C40000 00020C00
	s_or_b64 s[0:1], vcc, s[0:1]                               // 000000005370: 8780006A
	s_and_b64 vcc, exec, s[0:1]                                // 000000005374: 86EA007E
	s_cbranch_vccnz BB1_41                                     // 000000005378: BF870006
	ds_read_b32 v14, v9 offset:56                              // 00000000537C: D86C0038 0E000009
	ds_read_b32 v16, v8 offset:896                             // 000000005384: D86C0380 10000008
	s_waitcnt lgkmcnt(0)                                       // 00000000538C: BF8C007F
	v_mac_f32_e32 v7, v14, v16                                 // 000000005390: 2C0E210E

0000000000005394 <BB1_41>:
	v_mov_b32_e32 v14, s14                                     // 000000005394: 7E1C020E
	v_cmp_ge_i32_e32 vcc, s7, v14                              // 000000005398: 7D8C1C07
	v_cmp_gt_i32_e64 s[0:1], s7, v6                            // 00000000539C: D0C40000 00020C07
	s_or_b64 s[0:1], vcc, s[0:1]                               // 0000000053A4: 8780006A
	s_and_b64 vcc, exec, s[0:1]                                // 0000000053A8: 86EA007E
	s_cbranch_vccnz BB1_2                                      // 0000000053AC: BF87FEE5
	ds_read_b32 v14, v9 offset:60                              // 0000000053B0: D86C003C 0E000009
	ds_read_b32 v16, v8 offset:960                             // 0000000053B8: D86C03C0 10000008
	s_waitcnt lgkmcnt(0)                                       // 0000000053C0: BF8C007F
	v_mac_f32_e32 v7, v14, v16                                 // 0000000053C4: 2C0E210E
	s_branch BB1_2                                             // 0000000053C8: BF82FEDE

00000000000053cc <BB1_43>:
	v_cmp_gt_i32_e32 vcc, s12, v5                              // 0000000053CC: 7D880A0C
	v_cmp_gt_i32_e64 s[0:1], s13, v4                           // 0000000053D0: D0C40000 0002080D
	s_and_b64 s[0:1], vcc, s[0:1]                              // 0000000053D8: 8680006A
	s_and_saveexec_b64 s[2:3], s[0:1]                          // 0000000053DC: BE822000
	s_cbranch_execz BB1_45                                     // 0000000053E0: BF88000E
	v_mul_lo_u32 v0, v3, s15                                   // 0000000053E4: D2850000 00001F03
	v_add_u32_e32 v0, vcc, v0, v2                              // 0000000053EC: 32000500
	v_mul_lo_u32 v0, v0, s13                                   // 0000000053F0: D2850000 00001B00
	v_mov_b32_e32 v2, s5                                       // 0000000053F8: 7E040205
	v_add_u32_e32 v0, vcc, v4, v0                              // 0000000053FC: 32000104
	v_ashrrev_i32_e32 v1, 31, v0                               // 000000005400: 2202009F
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 000000005404: D28F0000 00020082
	v_add_u32_e32 v0, vcc, s4, v0                              // 00000000540C: 32000004
	v_addc_u32_e32 v1, vcc, v2, v1, vcc                        // 000000005410: 38020302
	flat_store_dword v[0:1], v7                                // 000000005414: DC700000 00000700

000000000000541c <BB1_45>:
	s_endpgm                                                   // 00000000541C: BF810000
	s_nop 0                                                    // 000000005420: BF800000
	s_nop 0                                                    // 000000005424: BF800000
	s_nop 0                                                    // 000000005428: BF800000
	s_nop 0                                                    // 00000000542C: BF800000
	s_nop 0                                                    // 000000005430: BF800000
	s_nop 0                                                    // 000000005434: BF800000
	s_nop 0                                                    // 000000005438: BF800000
	s_nop 0                                                    // 00000000543C: BF800000
	s_nop 0                                                    // 000000005440: BF800000
	s_nop 0                                                    // 000000005444: BF800000
	s_nop 0                                                    // 000000005448: BF800000
	s_nop 0                                                    // 00000000544C: BF800000
	s_nop 0                                                    // 000000005450: BF800000
	s_nop 0                                                    // 000000005454: BF800000
	s_nop 0                                                    // 000000005458: BF800000
	s_nop 0                                                    // 00000000545C: BF800000
	s_nop 0                                                    // 000000005460: BF800000
	s_nop 0                                                    // 000000005464: BF800000
	s_nop 0                                                    // 000000005468: BF800000
	s_nop 0                                                    // 00000000546C: BF800000
	s_nop 0                                                    // 000000005470: BF800000
	s_nop 0                                                    // 000000005474: BF800000
	s_nop 0                                                    // 000000005478: BF800000
	s_nop 0                                                    // 00000000547C: BF800000
	s_nop 0                                                    // 000000005480: BF800000
	s_nop 0                                                    // 000000005484: BF800000
	s_nop 0                                                    // 000000005488: BF800000
	s_nop 0                                                    // 00000000548C: BF800000
	s_nop 0                                                    // 000000005490: BF800000
	s_nop 0                                                    // 000000005494: BF800000
	s_nop 0                                                    // 000000005498: BF800000
	s_nop 0                                                    // 00000000549C: BF800000
	s_nop 0                                                    // 0000000054A0: BF800000
	s_nop 0                                                    // 0000000054A4: BF800000
	s_nop 0                                                    // 0000000054A8: BF800000
	s_nop 0                                                    // 0000000054AC: BF800000
	s_nop 0                                                    // 0000000054B0: BF800000
	s_nop 0                                                    // 0000000054B4: BF800000
	s_nop 0                                                    // 0000000054B8: BF800000
	s_nop 0                                                    // 0000000054BC: BF800000
	s_nop 0                                                    // 0000000054C0: BF800000
	s_nop 0                                                    // 0000000054C4: BF800000
	s_nop 0                                                    // 0000000054C8: BF800000
	s_nop 0                                                    // 0000000054CC: BF800000
	s_nop 0                                                    // 0000000054D0: BF800000
	s_nop 0                                                    // 0000000054D4: BF800000
	s_nop 0                                                    // 0000000054D8: BF800000
	s_nop 0                                                    // 0000000054DC: BF800000
	s_nop 0                                                    // 0000000054E0: BF800000
	s_nop 0                                                    // 0000000054E4: BF800000
	s_nop 0                                                    // 0000000054E8: BF800000
	s_nop 0                                                    // 0000000054EC: BF800000
	s_nop 0                                                    // 0000000054F0: BF800000
	s_nop 0                                                    // 0000000054F4: BF800000
	s_nop 0                                                    // 0000000054F8: BF800000
	s_nop 0                                                    // 0000000054FC: BF800000

0000000000005500 <gemm_sum$local>:
	v_cndmask_b32_e32 v0, s1, v0, vcc                          // 000000005500: 00000001
	v_cndmask_b32_e32 v0, s2, v0, vcc                          // 000000005504: 00000002
	v_cndmask_b32_e32 v4, s1, v0, vcc                          // 000000005508: 00080001
	v_cndmask_b32_e32 v1, s0, v128, vcc                        // 00000000550C: 00030000
	v_cndmask_b32_e32 v0, v0, v0, vcc                          // 000000005510: 00000100
		...
	v_cndmask_b32_e32 v86, 1, v0, vcc                          // 000000005530: 00AC0081
	v_cndmask_b32_e32 v0, v144, v4, vcc                        // 000000005534: 00000990
	v_cndmask_b32_e32 v5, s11, v0, vcc                         // 000000005538: 000A000B
		...
	v_cndmask_b32_e32 v0, xnack_mask_lo, v0, vcc               // 000000005548: 00000068
		...
	v_cndmask_b32_e32 v3, s18, v128, vcc                       // 000000005554: 00070012
		...
	v_subrev_f32_e32 v2, s4, v2                                // 000000005564: 06040404
	.long 0xffffffff                                           // 000000005568: FFFFFFFF
		...
	s_load_dwordx2 s[2:3], s[6:7], 0x0                         // 000000005600: C0060083 00000000
	s_load_dwordx4 s[12:15], s[6:7], 0x30                      // 000000005608: C00A0303 00000030
	s_load_dword s0, s[4:5], 0x4                               // 000000005610: C0020002 00000004
	s_waitcnt lgkmcnt(0)                                       // 000000005618: BF8C007F
	s_lshr_b32 s1, s0, 16                                      // 00000000561C: 8F019000
	s_and_b32 s0, s0, 0xffff                                   // 000000005620: 8600FF00 0000FFFF
	s_mul_i32 s8, s8, s0                                       // 000000005628: 92080008
	s_mul_i32 s9, s9, s1                                       // 00000000562C: 92090109
	s_add_i32 s4, s12, s8                                      // 000000005630: 8104080C
	s_add_i32 s0, s14, s9                                      // 000000005634: 8100090E
	v_add_u32_e32 v1, vcc, s0, v1                              // 000000005638: 32020200
	v_add_u32_e32 v2, vcc, s4, v0                              // 00000000563C: 32040004
	v_cmp_gt_i32_e32 vcc, s3, v2                               // 000000005640: 7D880403
	v_cmp_gt_i32_e64 s[0:1], s2, v1                            // 000000005644: D0C40000 00020202
	s_and_b64 s[0:1], vcc, s[0:1]                              // 00000000564C: 8680006A
	s_and_saveexec_b64 s[8:9], s[0:1]                          // 000000005650: BE882000
	s_cbranch_execz BB2_5                                      // 000000005654: BF880032
	s_load_dwordx4 s[8:11], s[6:7], 0xc                        // 000000005658: C00A0203 0000000C
	s_load_dwordx4 s[12:15], s[6:7], 0x18                      // 000000005660: C00A0303 00000018
	s_load_dwordx2 s[0:1], s[6:7], 0x28                        // 000000005668: C0060003 00000028
	v_mov_b32_e32 v3, 0                                        // 000000005670: 7E060280
	s_waitcnt lgkmcnt(0)                                       // 000000005674: BF8C007F
	s_cmp_lt_i32 s10, 1                                        // 000000005678: BF04810A
	s_cbranch_scc1 BB2_4                                       // 00000000567C: BF850015
	s_mul_i32 s2, s10, s3                                      // 000000005680: 9202030A
	v_mul_lo_u32 v4, s2, v1                                    // 000000005684: D2850004 00020202
	v_mov_b32_e32 v3, 0                                        // 00000000568C: 7E060280
	s_mov_b32 s2, s10                                          // 000000005690: BE82000A
	v_add_u32_e32 v0, vcc, v0, v4                              // 000000005694: 32000900
	v_add_u32_e32 v4, vcc, s4, v0                              // 000000005698: 32080004

000000000000569c <BB2_3>:
	v_ashrrev_i32_e32 v5, 31, v4                               // 00000000569C: 220A089F
	v_lshlrev_b64 v[5:6], 2, v[4:5]                            // 0000000056A0: D28F0005 00020882
	v_mov_b32_e32 v0, s13                                      // 0000000056A8: 7E00020D
	v_add_u32_e32 v5, vcc, s12, v5                             // 0000000056AC: 320A0A0C
	v_addc_u32_e32 v6, vcc, v0, v6, vcc                        // 0000000056B0: 380C0D00
	flat_load_dword v0, v[5:6]                                 // 0000000056B4: DC500000 00000005
	s_add_i32 s2, s2, -1                                       // 0000000056BC: 8102C102
	s_cmp_lg_u32 s2, 0                                         // 0000000056C0: BF078002
	v_add_u32_e32 v4, vcc, s3, v4                              // 0000000056C4: 32080803
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 0000000056C8: BF8C0070
	v_add_f32_e32 v3, v3, v0                                   // 0000000056CC: 02060103
	s_cbranch_scc1 BB2_3                                       // 0000000056D0: BF85FFF2

00000000000056d4 <BB2_4>:
	v_mul_lo_u32 v0, v1, s3                                    // 0000000056D4: D2850000 00000701
	v_mov_b32_e32 v5, s1                                       // 0000000056DC: 7E0A0201
	v_add_u32_e32 v0, vcc, v0, v2                              // 0000000056E0: 32000500
	v_ashrrev_i32_e32 v1, 31, v0                               // 0000000056E4: 2202009F
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 0000000056E8: D28F0000 00020082
	v_mov_b32_e32 v2, s15                                      // 0000000056F0: 7E04020F
	v_add_u32_e32 v4, vcc, s0, v0                              // 0000000056F4: 32080000
	v_addc_u32_e32 v5, vcc, v5, v1, vcc                        // 0000000056F8: 380A0305
	v_add_u32_e32 v0, vcc, s14, v0                             // 0000000056FC: 3200000E
	v_addc_u32_e32 v1, vcc, v2, v1, vcc                        // 000000005700: 38020302
	flat_load_dword v0, v[0:1]                                 // 000000005704: DC500000 00000000
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 00000000570C: BF8C0070
	v_mul_f32_e32 v0, s9, v0                                   // 000000005710: 0A000009
	v_mac_f32_e32 v0, s8, v3                                   // 000000005714: 2C000608
	flat_store_dword v[4:5], v0                                // 000000005718: DC700000 00000004

0000000000005720 <BB2_5>:
	s_endpgm                                                   // 000000005720: BF810000
	s_nop 0                                                    // 000000005724: BF800000
	s_nop 0                                                    // 000000005728: BF800000
	s_nop 0                                                    // 00000000572C: BF800000
	s_nop 0                                                    // 000000005730: BF800000
	s_nop 0                                                    // 000000005734: BF800000
	s_nop 0                                                    // 000000005738: BF800000
	s_nop 0                                                    // 00000000573C: BF800000
	s_nop 0                                                    // 000000005740: BF800000
	s_nop 0                                                    // 000000005744: BF800000
	s_nop 0                                                    // 000000005748: BF800000
	s_nop 0                                                    // 00000000574C: BF800000
	s_nop 0                                                    // 000000005750: BF800000
	s_nop 0                                                    // 000000005754: BF800000
	s_nop 0                                                    // 000000005758: BF800000
	s_nop 0                                                    // 00000000575C: BF800000
	s_nop 0                                                    // 000000005760: BF800000
	s_nop 0                                                    // 000000005764: BF800000
	s_nop 0                                                    // 000000005768: BF800000
	s_nop 0                                                    // 00000000576C: BF800000
	s_nop 0                                                    // 000000005770: BF800000
	s_nop 0                                                    // 000000005774: BF800000
	s_nop 0                                                    // 000000005778: BF800000
	s_nop 0                                                    // 00000000577C: BF800000
	s_nop 0                                                    // 000000005780: BF800000
	s_nop 0                                                    // 000000005784: BF800000
	s_nop 0                                                    // 000000005788: BF800000
	s_nop 0                                                    // 00000000578C: BF800000
	s_nop 0                                                    // 000000005790: BF800000
	s_nop 0                                                    // 000000005794: BF800000
	s_nop 0                                                    // 000000005798: BF800000
	s_nop 0                                                    // 00000000579C: BF800000
	s_nop 0                                                    // 0000000057A0: BF800000
	s_nop 0                                                    // 0000000057A4: BF800000
	s_nop 0                                                    // 0000000057A8: BF800000
	s_nop 0                                                    // 0000000057AC: BF800000
	s_nop 0                                                    // 0000000057B0: BF800000
	s_nop 0                                                    // 0000000057B4: BF800000
	s_nop 0                                                    // 0000000057B8: BF800000
	s_nop 0                                                    // 0000000057BC: BF800000
	s_nop 0                                                    // 0000000057C0: BF800000
	s_nop 0                                                    // 0000000057C4: BF800000
	s_nop 0                                                    // 0000000057C8: BF800000
	s_nop 0                                                    // 0000000057CC: BF800000
	s_nop 0                                                    // 0000000057D0: BF800000
	s_nop 0                                                    // 0000000057D4: BF800000
	s_nop 0                                                    // 0000000057D8: BF800000
	s_nop 0                                                    // 0000000057DC: BF800000
	s_nop 0                                                    // 0000000057E0: BF800000
	s_nop 0                                                    // 0000000057E4: BF800000
	s_nop 0                                                    // 0000000057E8: BF800000
	s_nop 0                                                    // 0000000057EC: BF800000
	s_nop 0                                                    // 0000000057F0: BF800000
	s_nop 0                                                    // 0000000057F4: BF800000
	s_nop 0                                                    // 0000000057F8: BF800000
	s_nop 0                                                    // 0000000057FC: BF800000

0000000000005800 <gemm_old$local>:
	v_cndmask_b32_e32 v0, s1, v0, vcc                          // 000000005800: 00000001
	v_cndmask_b32_e32 v0, s2, v0, vcc                          // 000000005804: 00000002
	v_cndmask_b32_e32 v4, s1, v0, vcc                          // 000000005808: 00080001
	v_cndmask_b32_e32 v1, s0, v128, vcc                        // 00000000580C: 00030000
	v_cndmask_b32_e32 v0, v0, v0, vcc                          // 000000005810: 00000100
		...
	v_cndmask_b32_e32 v86, 2, v0, vcc                          // 000000005830: 00AC0082
	v_cndmask_b32_e32 v0, v144, v4, vcc                        // 000000005834: 00000990
	v_cndmask_b32_e32 v5, s11, v0, vcc                         // 000000005838: 000A000B
		...
	v_cndmask_b32_e32 v0, ttmp0, v0, vcc                       // 000000005848: 00000070
		...
	v_cndmask_b32_e32 v5, s18, v0, vcc                         // 000000005854: 000A0012
		...
	v_subrev_f32_e32 v2, s4, v2                                // 000000005864: 06040404
	.long 0xffffffff                                           // 000000005868: FFFFFFFF
		...
	s_load_dwordx4 s[12:15], s[6:7], 0x0                       // 000000005900: C00A0303 00000000
	s_load_dwordx4 s[0:3], s[6:7], 0x38                        // 000000005908: C00A0003 00000038
	s_waitcnt lgkmcnt(0)                                       // 000000005910: BF8C007F
	s_load_dword s1, s[4:5], 0x4                               // 000000005914: C0020042 00000004
	s_waitcnt lgkmcnt(0)                                       // 00000000591C: BF8C007F
	s_lshr_b32 s3, s1, 16                                      // 000000005920: 8F039001
	s_and_b32 s1, s1, 0xffff                                   // 000000005924: 8601FF01 0000FFFF
	s_mul_i32 s8, s8, s1                                       // 00000000592C: 92080108
	s_add_i32 s0, s0, s8                                       // 000000005930: 81000800
	s_mul_i32 s9, s9, s3                                       // 000000005934: 92090309
	v_add_u32_e32 v0, vcc, s0, v0                              // 000000005938: 32000000
	s_add_i32 s0, s2, s9                                       // 00000000593C: 81000902
	v_add_u32_e32 v1, vcc, s0, v1                              // 000000005940: 32020200
	v_cmp_gt_i32_e32 vcc, s12, v1                              // 000000005944: 7D88020C
	v_cmp_gt_i32_e64 s[0:1], s13, v0                           // 000000005948: D0C40000 0002000D
	s_and_b64 s[0:1], s[0:1], vcc                              // 000000005950: 86806A00
	s_and_saveexec_b64 s[2:3], s[0:1]                          // 000000005954: BE822000
	s_cbranch_execz BB3_5                                      // 000000005958: BF88003A
	s_load_dword s0, s[6:7], 0x10                              // 00000000595C: C0020003 00000010
	s_load_dwordx8 s[4:11], s[6:7], 0x18                       // 000000005964: C00E0103 00000018
	s_cmp_lt_i32 s14, 1                                        // 00000000596C: BF04810E
	v_mov_b32_e32 v2, 0                                        // 000000005970: 7E040280
	s_cbranch_scc1 BB3_4                                       // 000000005974: BF850020
	v_mul_lo_u32 v2, s14, v1                                   // 000000005978: D2850002 0002020E
	s_waitcnt lgkmcnt(0)                                       // 000000005980: BF8C007F
	v_mov_b32_e32 v5, s5                                       // 000000005984: 7E0A0205
	s_mov_b32 s1, s14                                          // 000000005988: BE81000E
	v_ashrrev_i32_e32 v3, 31, v2                               // 00000000598C: 2206049F
	v_lshlrev_b64 v[3:4], 2, v[2:3]                            // 000000005990: D28F0003 00020482
	v_mov_b32_e32 v2, 0                                        // 000000005998: 7E040280
	v_add_u32_e32 v3, vcc, s4, v3                              // 00000000599C: 32060604
	v_addc_u32_e32 v4, vcc, v5, v4, vcc                        // 0000000059A0: 38080905
	v_mov_b32_e32 v5, v0                                       // 0000000059A4: 7E0A0300

00000000000059a8 <BB3_3>:
	v_ashrrev_i32_e32 v6, 31, v5                               // 0000000059A8: 220C0A9F
	v_lshlrev_b64 v[6:7], 2, v[5:6]                            // 0000000059AC: D28F0006 00020A82
	v_mov_b32_e32 v9, s7                                       // 0000000059B4: 7E120207
	v_add_u32_e32 v6, vcc, s6, v6                              // 0000000059B8: 320C0C06
	v_addc_u32_e32 v7, vcc, v9, v7, vcc                        // 0000000059BC: 380E0F09
	flat_load_dword v8, v[3:4]                                 // 0000000059C0: DC500000 08000003
	flat_load_dword v6, v[6:7]                                 // 0000000059C8: DC500000 06000006
	s_add_i32 s1, s1, -1                                       // 0000000059D0: 8101C101
	v_add_u32_e32 v3, vcc, 4, v3                               // 0000000059D4: 32060684
	v_addc_u32_e32 v4, vcc, 0, v4, vcc                         // 0000000059D8: 38080880
	v_add_u32_e32 v5, vcc, s13, v5                             // 0000000059DC: 320A0A0D
	s_cmp_eq_u32 s1, 0                                         // 0000000059E0: BF068001
	s_waitcnt vmcnt(1) lgkmcnt(1)                              // 0000000059E4: BF8C0171
	v_mul_f32_e32 v7, s15, v8                                  // 0000000059E8: 0A0E100F
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 0000000059EC: BF8C0070
	v_mac_f32_e32 v2, v7, v6                                   // 0000000059F0: 2C040D07
	s_cbranch_scc0 BB3_3                                       // 0000000059F4: BF84FFEC

00000000000059f8 <BB3_4>:
	v_mul_lo_u32 v1, v1, s13                                   // 0000000059F8: D2850001 00001B01
	s_waitcnt lgkmcnt(0)                                       // 000000005A00: BF8C007F
	v_mov_b32_e32 v4, s9                                       // 000000005A04: 7E080209
	v_add_u32_e32 v0, vcc, v1, v0                              // 000000005A08: 32000101
	v_ashrrev_i32_e32 v1, 31, v0                               // 000000005A0C: 2202009F
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 000000005A10: D28F0000 00020082
	v_add_u32_e32 v3, vcc, s8, v0                              // 000000005A18: 32060008
	v_addc_u32_e32 v4, vcc, v4, v1, vcc                        // 000000005A1C: 38080304
	flat_load_dword v3, v[3:4]                                 // 000000005A20: DC500000 03000003
	v_mov_b32_e32 v4, s11                                      // 000000005A28: 7E08020B
	v_add_u32_e32 v0, vcc, s10, v0                             // 000000005A2C: 3200000A
	v_addc_u32_e32 v1, vcc, v4, v1, vcc                        // 000000005A30: 38020304
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000005A34: BF8C0070
	v_mac_f32_e32 v2, s0, v3                                   // 000000005A38: 2C040600
	flat_store_dword v[0:1], v2                                // 000000005A3C: DC700000 00000200

0000000000005a44 <BB3_5>:
	s_endpgm                                                   // 000000005A44: BF810000
